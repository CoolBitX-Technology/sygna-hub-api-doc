{
  "openapi": "3.0.0",
  "info": {
    "version": "1.23.0",
    "title": "Sygna Hub",
    "description": "Sygna Hub API Document",
    "contact": {}
  },
  "servers": [
    {
      "url": "httsp://example.com/v1",
      "description": ""
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "self"
        ],
        "summary": "get current release, version the path could be used for health check",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/schema.GetRootOutput"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/currencies": {
      "get": {
        "tags": [
          "Hub/currencies"
        ],
        "summary": "Get supported currencies",
        "description": "Please refer to the GET /currencies API response body for the \"key\" in each coin/token's extra information (addr_extra_info).",
        "operationId": "GetCurrencies",
        "parameters": [
          {
            "name": "currency_id",
            "in": "query",
            "description": "filter currencies by currency identifier",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "currency_symbol",
            "in": "query",
            "description": "filter currencies data by currency symbol",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "currency_name",
            "in": "query",
            "description": "filter currencies data by currency name",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "kyt_provider",
            "in": "query",
            "description": "filter currencies data by kyt providers",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "filter currencies by if status is activated",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean"
              }
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "filter data by a range of created data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Specifies sequences to sort data (ie.orderby=id:desc)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "description": "filter data by a range of updated data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/model.Currency"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/schema.RespWithPaging"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Hub/customers"
        ],
        "summary": "Get customers",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "filter customers by customer identifier",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "filter customers by customer name",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "filter customers by if status is activated",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean"
              }
            }
          },
          {
            "name": "risk_score_provider",
            "in": "query",
            "description": "filter customers by risk score provider",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "Elliptic",
                  "Chainalysis V1",
                  "Chainalysis V2",
                  "Merkle Science",
                  "Dow Jones",
                  "Coinfirm",
                  "Coinfirm (Sandbox)"
                ]
              }
            }
          },
          {
            "name": "max_risk_score",
            "in": "query",
            "description": "A URL parameter that specifies the range of max risk score. This format should be {provider:from,to} (ie.Elliptic:0,10 or Chainalysis V1:low,high).",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "avg_risk_score",
            "in": "query",
            "description": "A URL parameter that specifies the range of average risk score. This format should be {provider:from,to} (ie.Elliptic:0,10 or Chainalysis V1:low,high).",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "filter customers by labels from KYT service searched",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "last_screened",
            "in": "query",
            "description": "filter customers by a range of last screened date(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "filter data by a range of created data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Specifies sequences to sort data (ie.orderby=id:desc)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "description": "filter data by a range of updated data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/schema.GetCustomersOutput"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/schema.RespWithPaging"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      },
      "put": {
        "tags": [
          "Hub/customers"
        ],
        "summary": "update customers",
        "operationId": "",
        "requestBody": {
          "description": "put /customers params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PutCustomersInput"
                }
              },
              "examples": {
                "Example": {
                  "value": [
                    {
                      "is_active": false,
                      "customer_type": 0,
                      "customer_id": "sygnasygna",
                      "country": "TW",
                      "natural_person_name": {
                        "name": {
                          "first_name": "sygna",
                          "last_name": "sygna"
                        }
                      },
                      "assets": [
                        {
                          "address": "3MBWbunF8kLFA5u9E8mk4MYkWKJNedpx55",
                          "extra_info": {},
                          "id": "be54f510-8859-405d-a104-7eaeb2c53630",
                          "currency_id": "sygna:0x80000000"
                        },
                        {
                          "address": "0x1b7844ed817ebF8B559D25A4f6D9F45931227970",
                          "extra_info": {},
                          "id": "862670a5-e079-418f-b07e-3946f951583d",
                          "currency_id": "sygna:0x8000003c"
                        }
                      ],
                      "national": {
                        "national_identifier_type": "CCPT",
                        "national_identifier": "1111-1111-1111-1111",
                        "country_of_issue": "TW",
                        "registration_authority": "Coolbitx"
                      },
                      "birth": {
                        "place_of_birth": "Taipei Zoo",
                        "date_of_birth": "2022-11-30"
                      },
                      "id": "b52e9794-1ea1-42ad-8a59-db582bf7bb07",
                      "assets_ignore_kyt": true
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      },
      "post": {
        "tags": [
          "Hub/customers"
        ],
        "summary": "Create customers",
        "requestBody": {
          "description": "post /customers params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PostCustomersInput"
                }
              },
              "examples": {
                "Natural Person": {
                  "value": [
                    {
                      "is_active": true,
                      "customer_type": 0,
                      "customer_id": "sygnasygna",
                      "country": "TW",
                      "natural_person_name": {
                        "name": {
                          "first_name": "sygna",
                          "last_name": "sygna"
                        }
                      },
                      "birth": {
                        "place_of_birth": "Taipei Zoo",
                        "date_of_birth": "2022-11-30"
                      },
                      "national": {
                        "national_identifier_type": "CCPT",
                        "national_identifier": "1111-1111-1111",
                        "country_of_issue": "TW",
                        "registration_authority": "Coolbitx"
                      },
                      "assets": [
                        {
                          "address": "3MBWbunF8kLFA5u9E8mk4MYkWKJNedpx55",
                          "extra_info": {},
                          "currency_id": "sygna:0x80000000"
                        },
                        {
                          "address": "0x1b7844ed817ebF8B559D25A4f6D9F45931227970",
                          "extra_info": {},
                          "currency_id": "sygna:0x8000003c"
                        }
                      ],
                      "assets_ignore_kyt": true
                    }
                  ]
                },
                "Legal Person": {
                  "value": [
                    {
                      "is_active": true,
                      "customer_type": 1,
                      "customer_id": "cb001",
                      "country": "TW",
                      "legal_person_name": {
                        "name": "Coolbitx"
                      },
                      "address": {
                        "address_type": "HOME",
                        "country": "TW",
                        "department": "",
                        "sub_department": "",
                        "street_name": "Changchun Road",
                        "building_number": "",
                        "building_name": "",
                        "floor": "",
                        "post_box": "",
                        "room": "",
                        "post_code": "",
                        "town_name": "Taipei",
                        "town_location_name": "",
                        "district_name": "",
                        "country_sub_division": "",
                        "address_line": [
                          "8 F., No. 176, Changchun Rd., Zhongshan Dist., Taipei City 10485, Taiwan (R.O.C.)"
                        ]
                      },
                      "assets": [
                        {
                          "address": "0xC964bE081211144e987828293dffa5828c6f509b",
                          "extra_info": {
                            "flag": "1"
                          },
                          "currency_id": "sygna:0x800002ca"
                        }
                      ],
                      "assets_ignore_kyt": true
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      },
      "patch": {
        "tags": [
          "Hub/customers"
        ],
        "summary": "update customers",
        "requestBody": {
          "description": "patch /customers params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PatchCustomersInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "id": "5bd43419-aff3-4828-b739-3319ed4fffb6",
                      "is_active": false
                    }
                  ]
                },
                "Example 2": {
                  "value": [
                    {
                      "id": "b52e9794-1ea1-42ad-8a59-db582bf7bb07",
                      "is_active": true
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/customers-export": {
      "get": {
        "tags": [
          "Hub/customers-export"
        ],
        "summary": "generate customers report",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "filter customers by customer identifier",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "filter customers by customer name",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "filter customers by if status is activated",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean"
              }
            }
          },
          {
            "name": "risk_score_provider",
            "in": "query",
            "description": "filter customers by risk score provider",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "Elliptic",
                  "Chainalysis V1",
                  "Chainalysis V2",
                  "Merkle Science",
                  "Dow Jones",
                  "Coinfirm",
                  "Coinfirm (Sandbox)"
                ]
              }
            }
          },
          {
            "name": "max_risk_score",
            "in": "query",
            "description": "A URL parameter that specifies the range of max risk score. This format should be {provider:from,to} (ie.Elliptic:0,10 or Chainalysis V1:low,high).",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "avg_risk_score",
            "in": "query",
            "description": "A URL parameter that specifies the range of average risk score. This format should be {provider:from,to} (ie.Elliptic:0,10 or Chainalysis V1:low,high).",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "label",
            "in": "query",
            "description": "filter customers by labels from KYT service searched",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "last_screened",
            "in": "query",
            "description": "filter customers by a range of last screened date(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "filter data by a range of created data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Specifies sequences to sort data (ie.orderby=id:desc)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "description": "filter data by a range of updated data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/customers-export/download": {
      "get": {
        "tags": [
          "Hub/customers-export"
        ],
        "summary": "download customer report",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/customers-export/status": {
      "get": {
        "tags": [
          "Hub/customers-export"
        ],
        "summary": "get customer report processing status",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/model.Report"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": [
          "Hub/customers"
        ],
        "summary": "get specific customer detail",
        "parameters": [
          {
            "name": "asset_id",
            "in": "query",
            "description": "filter asset by ids in current customer",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "asset_currency_id",
            "in": "query",
            "description": "filter asset by currency id in current customer",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "asset_risk_score",
            "in": "query",
            "description": "filter asset by risk score in current customer",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "asset_address",
            "in": "query",
            "description": "filter asset by address in current customer",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "asset_label",
            "in": "query",
            "description": "filter asset by label in current customer",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "asset_value",
            "in": "query",
            "description": "filter asset by value in current customer",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "asset_last_screened",
            "in": "query",
            "description": "filter asset by last screen time in current customer",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "customer identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/GET-customers_id_natural-person"
                    },
                    {
                      "$ref": "#/components/schemas/GET-customers_id_legal-person"
                    },
                    {
                      "type": "object"
                    }
                  ]
                },
                "examples": {
                  "Natural Person": {
                    "value": {
                      "data": {
                        "id": "3bd97f92-3e14-430e-bcf7-c07fa2fxxxxx",
                        "updated_at": "2023-05-11T06:04:55.000Z",
                        "vasp_code": "XXXXXXXX",
                        "customer_type": 0,
                        "customer_id": "456457634567xxxxx",
                        "natural_person_name": {
                          "name": {
                            "first_name": "Takahagi",
                            "last_name": "ririko"
                          },
                          "local_name": {
                            "first_name": "高橋",
                            "last_name": "莉莉子"
                          },
                          "phonetic_name": {
                            "first_name": "タカハシ",
                            "last_name": "リリコ"
                          }
                        },
                        "country": "TW",
                        "is_active": true,
                        "created_at": "2023-03-06T02:58:33.000Z",
                        "national": {
                          "country_of_issue": "AF",
                          "national_identifier": "45624562456",
                          "national_identifier_type": "ARNU",
                          "registration_authority": "sdfvasfbadfbadfb"
                        },
                        "address": {
                          "address_line": [
                            "bqerb"
                          ],
                          "address_type": "HOME",
                          "building_name": "sdfbdfb",
                          "building_number": "12",
                          "country": "AM",
                          "country_sub_division": "qerbqerb",
                          "department": "12",
                          "district_name": "qerb",
                          "floor": "1",
                          "post_box": "123",
                          "post_code": "bsrt1312",
                          "room": "123",
                          "street_name": "qergqer",
                          "sub_department": "erge",
                          "town_location_name": "erbqe",
                          "town_name": "drvbqerb"
                        },
                        "labels": [],
                        "assets": [
                          {
                            "id": "84158bb2-e4f2-4477-8c31-1ad92c1xxxxx",
                            "updated_at": "2023-05-11T06:04:55.000Z",
                            "currency_id": "sygna:0x80000000",
                            "currency_symbol": "BTC",
                            "currency_name": "Bitcoin",
                            "address": "124EPZfzX7g5dpDiNXbdmMSxsTyW4xxxxx",
                            "risk_score_provider": "Elliptic",
                            "labels": [],
                            "created_at": "2023-05-11T06:04:55.000Z",
                            "last_screened": null,
                            "is_sygna_supported": true,
                            "is_kyt_supported": true
                          },
                          {
                            "id": "2cc427ed-f331-4bf5-a655-9359481xxxxx",
                            "updated_at": "2023-05-11T06:04:55.000Z",
                            "currency_id": "sygna:0x80000090",
                            "currency_symbol": "XRP",
                            "currency_name": "XRP",
                            "address": "rMAGnTv4eMWktZnhKa5cHcDiY84Zixxxxx",
                            "extra_info": {
                              "Tag": "1304"
                            },
                            "risk_score_provider": "Elliptic",
                            "labels": [],
                            "created_at": "2023-05-11T06:04:55.000Z",
                            "last_screened": null,
                            "is_sygna_supported": true,
                            "is_kyt_supported": true
                          }
                        ],
                        "assets_ignore_kyt": false
                      }
                    }
                  },
                  "Legal Person": {
                    "value": {
                      "data": {
                        "id": "3bd97f92-3e14-430e-bcf7-c07fa2f84c79",
                        "updated_at": "2023-05-11T06:04:55.000Z",
                        "vasp_code": "OWNRTWTP",
                        "customer_type": 0,
                        "customer_id": "45645763456735678",
                        "legal_person_name": {
                          "name": "aaa bbb",
                          "local_name": "AAA_BBB",
                          "phonetic_name": "ＡＡＡ＿ＢＢＢ"
                        },
                        "country": "TW",
                        "is_active": true,
                        "created_at": "2023-03-06T02:58:33.000Z",
                        "national": {
                          "country_of_issue": "AF",
                          "national_identifier": "45624562456",
                          "national_identifier_type": "ARNU",
                          "registration_authority": "sdfvasfbadfbadfb"
                        },
                        "address": {
                          "address_line": [
                            "bqerb"
                          ],
                          "address_type": "HOME",
                          "building_name": "sdfbdfb",
                          "building_number": "12",
                          "country": "AM",
                          "country_sub_division": "qerbqerb",
                          "department": "12",
                          "district_name": "qerb",
                          "floor": "1",
                          "post_box": "123",
                          "post_code": "bsrt1312",
                          "room": "123",
                          "street_name": "qergqer",
                          "sub_department": "erge",
                          "town_location_name": "erbqe",
                          "town_name": "drvbqerb"
                        },
                        "labels": [],
                        "assets": [
                          {
                            "id": "84158bb2-e4f2-4477-8c31-1ad92c166ea0",
                            "updated_at": "2023-05-11T06:04:55.000Z",
                            "currency_id": "sygna:0x80000000",
                            "currency_symbol": "BTC",
                            "currency_name": "Bitcoin",
                            "address": "124EPZfzX7g5dpDiNXbdmMSxsTyW47ZgbX",
                            "risk_score_provider": "Elliptic",
                            "labels": [],
                            "created_at": "2023-05-11T06:04:55.000Z",
                            "last_screened": null,
                            "is_sygna_supported": true,
                            "is_kyt_supported": true
                          },
                          {
                            "id": "2cc427ed-f331-4bf5-a655-9359481574db",
                            "updated_at": "2023-05-11T06:04:55.000Z",
                            "currency_id": "sygna:0x80000090",
                            "currency_symbol": "XRP",
                            "currency_name": "XRP",
                            "address": "rMAGnTv4eMWktZnhKa5cHcDiY84ZiKUaQm",
                            "extra_info": {
                              "Tag": "1304"
                            },
                            "risk_score_provider": "Elliptic",
                            "labels": [],
                            "created_at": "2023-05-11T06:04:55.000Z",
                            "last_screened": null,
                            "is_sygna_supported": true,
                            "is_kyt_supported": true
                          }
                        ],
                        "assets_ignore_kyt": false
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/data-transfer-export": {
      "get": {
        "tags": [
          "Hub/data-transfer-export"
        ],
        "summary": "generate transaction report",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "filter transactions by transaction identifier",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "filter transactions by customer name",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "address",
            "in": "query",
            "description": "filter transactions by transaction address",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "tx_id",
            "in": "query",
            "description": "filter transactions by transaction id on blockchain",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "currency_id",
            "in": "query",
            "description": "filter transactions by transaction currency id",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "last_screened",
            "in": "query",
            "description": "filter transactions by a range of last screened(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "risk_score_provider",
            "in": "query",
            "description": "filter transactions by risk score provider",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "risk_score",
            "in": "query",
            "description": "A URL parameter that specifies the range of risk score. This format should be {provider:from,to} (ie.Elliptic:0,10 or Chainalysis V1:low,high).",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "filter transactions by transaction status(0:Processing,1:Blocked,2:Pending On Beneficiary,3:Transfer To Beneficiary Failed,4:Pending On Originator,5:Transfer To Originator Failed,6:Confirmed,7:Confirm Failed,8:Rejected)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "status_text",
            "in": "query",
            "description": "filter transactions by transaction status text",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "Processing",
                  "Blocked",
                  "Pending On Beneficiary",
                  "Transfer To Beneficiary Failed",
                  "Pending On Originator",
                  "Transfer To Originator Failed",
                  "Confirmed",
                  "Confirm Failed",
                  "Rejected"
                ]
              }
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "A URL parameter that specifies the range of value. This format should be {from,to} (ie.value=0.1,10.5 means filtering transactions by value between 0.1 and 10.5 inclusive).",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sanction_score",
            "in": "query",
            "description": "A URL parameter that specifies the range of sanction screening score. This format should be {from,to} (ie.sanction_score=0.1,10.5 means filtering transactions by sanction_score between 0.1 and 10.5 inclusive).",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "protocol",
            "in": "query",
            "description": "filter transactions by transaction protocol",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "Sygna_Bridge",
                  "Sygna_EmailProtocol",
                  "TRISA"
                ]
              }
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "filter data by a range of created data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Specifies sequences to sort data (ie.orderby=id:desc)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "description": "filter data by a range of updated data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/data-transfer-export/download": {
      "get": {
        "tags": [
          "Hub/data-transfer-export"
        ],
        "summary": "download transactions report",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/data-transfer-export/status": {
      "get": {
        "tags": [
          "Hub/data-transfer-export"
        ],
        "summary": "get transaction report processing status",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/model.Report"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/global-vasp": {
      "get": {
        "tags": [
          "Hub/global-vasp"
        ],
        "summary": "get global-vasp",
        "description": "only admin could get encrypted credentials",
        "parameters": [
          {
            "name": "vasp_identifier",
            "in": "query",
            "description": "filter global vasp by vasp identifier",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "vasp_name",
            "in": "query",
            "description": "filter global vasp data by vasp name",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "protocol",
            "in": "query",
            "description": "filter global vasp data by protocol",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "Sygna_Bridge",
                  "Sygna_EmailProtocol",
                  "TRISA",
                  "VerifyVASP",
                  "Notabene_TR:NOW",
                  "Veriscope on Shyft"
                ]
              }
            }
          },
          {
            "name": "extra_info[key]",
            "in": "query",
            "description": "filter global vasp data by extra_info's key",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "filter data by a range of created data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "description": "filter data by a range of updated data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Specifies sequences to sort data (ie.orderby=id:desc)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          },
                          "vasp_identifier": {
                            "type": "string",
                            "description": "Sygna: VASP code; TRISA: Member ID"
                          },
                          "protocol": {
                            "type": "string"
                          },
                          "vasp_name": {
                            "type": "string",
                            "description": "complete VASP name"
                          },
                          "extra_info": {
                            "type": "object",
                            "description": "extra_info content will be different depend on the protocol that VASP belongs to",
                            "properties": {
                              "country_code": {
                                "type": "string"
                              },
                              "regulatory_status": {
                                "type": "string",
                                "description": "information from Sygna parter: VASPnet"
                              },
                              "supervisory_authority": {
                                "type": "string",
                                "description": "information from Sygna parter: VASPnet"
                              },
                              "vasp_pubkey": {
                                "type": "string"
                              },
                              "business_category": {
                                "type": "integer",
                                "description": "information from Sygna partner: TRISA"
                              },
                              "common_name": {
                                "type": "string",
                                "description": "TRISA VASP's common ID"
                              },
                              "country": {
                                "type": "string"
                              },
                              "endpoint": {
                                "type": "string",
                                "description": "TRISA Service Endpoint"
                              },
                              "registered_directory": {
                                "type": "string",
                                "description": "information from Sygna partner: TRISA"
                              },
                              "vasp_categories": {
                                "type": "array",
                                "description": "information from Sygna partner: TRISA",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "verified_on": {
                                "type": "string",
                                "description": "information from Sygna partner: TRISA"
                              },
                              "website": {
                                "type": "string",
                                "description": "information from Sygna partner: TRISA"
                              }
                            }
                          },
                          "vasp_server_status": {
                            "type": "string",
                            "description": "Sygna VASP server health check status: healthy, unhealthy or unknown"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/oauth2": {
      "post": {
        "tags": [
          "Hub/oauth2"
        ],
        "summary": "get oauth token",
        "description": "API accessToken will be in the API response body and header set-cookie (cookie will be deprecated after 2023.2.1)",
        "requestBody": {
          "description": "post /oauth2 param",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/schema.PostOauthInput"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "account": "originator@gmail.com",
                    "credential": "P@ssword0",
                    "login_type": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithStatus"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "data": {
                        "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlX2lkIjowLCJhdWQiOiJvcmlnaW5hdG9yQGdtYWlsLmNvbSIsImV4cCI6MTY3MjgzMjg0NiwiaWF0IjoxNjcyNzk2ODQ2LCJpc3MiOiJzeWduYS1idW5kbGUtcHJvZHVjdCIsInZhc3BfY29kZSI6IkNZV1dUV1RZIiwidXNlcl9pZCI6IjQ3Zjk5MjcwLWEzYjMtNGZmMy1iMjE0LWEzMWY5MTZjMTBlMCIsImxvZ2luX3R5cGUiOiJwYXNzd29yZCIsImxvZ2luX2lkIjoiZWNlY2RlNWQtZDA1ZS00Yzc5LThjOWEtZDZlNTIxM2FkZDdjIiwiYWNjb3VudCI6Im9yaWdpbmF0b3JAZ21haWwuY29tIn0.1fRpXseNGrRrWkPRCkTIoAMhIHpjV9E-bb8qMiK7XeE",
                        "success": true
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      },
      "delete": {
        "tags": [
          "Hub/oauth2"
        ],
        "summary": "delete oauth token from database",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithStatus"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/ownerships": {
      "get": {
        "tags": [
          "Hub/ownerships"
        ],
        "summary": "the API would be used when you want to see a list of all validations",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/model.Ownership"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/schema.RespWithPaging"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      },
      "post": {
        "tags": [
          "Hub/ownerships"
        ],
        "summary": "the API would be used when you want to validate an address whether belong to a user who owns private wallet",
        "parameters": [
          {
            "name": "accept_high_risk",
            "in": "query",
            "description": "the validation would be sent even if the addresses are risky",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "description": "post /ownerships params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PostOwnershipInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "owner_email": "owner@example.com",
                      "transaction_information": {
                        "vasp_beneficiary_wallet_address": "1Ed5wjp7LpcU5tzQBNnKkk5zWDdpJ3e3bP",
                        "currency_id": "sygna:0x80000000",
                        "value": "1"
                      },
                      "private_wallet_address": [
                        "1N7BCTX2uEjsRUoDtfeZTjaTEXuDZSsR3R"
                      ],
                      "sender_email": "my@example.com"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/ownerships/cancel": {
      "patch": {
        "tags": [
          "Hub/ownerships"
        ],
        "summary": "you couldn't validate some address that it is processing or accepted until you cancel it",
        "requestBody": {
          "description": "patch /ownerships/cancel params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PatchOwnershipIdInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/ownerships/confirm": {
      "patch": {
        "tags": [
          "Hub/ownerships"
        ],
        "summary": "the API would be used when you received a reply from the receiver and you want to accept or reject the reply",
        "requestBody": {
          "description": "patch /ownerships/confirm params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PatchOwnershipConfirmInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "accept": [
                        {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08"
                        }
                      ],
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "reject": [
                        {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "reject_code": "BVRC001",
                          "reject_message": "string"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/ownerships/resend": {
      "patch": {
        "tags": [
          "Hub/ownerships"
        ],
        "summary": "the API would be used when a receiver lets you send a email again",
        "requestBody": {
          "description": "patch /ownerships/resend params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PatchOwnershipIdInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/ownerships/unblock": {
      "patch": {
        "tags": [
          "Hub/ownerships"
        ],
        "summary": "the API would be used when the validation that including risky address wouldn't be sent until you unblock it",
        "requestBody": {
          "description": "patch /ownerships/unblock params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PatchOwnershipIdInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/ownerships/validate": {
      "patch": {
        "tags": [
          "Hub/ownerships"
        ],
        "summary": "the API would be used when you get the ownership identifier from the link that you received and want to reply to the validation",
        "requestBody": {
          "description": "patch /ownerships/validate params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PatchOwnershipValidationInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "accept": [
                        {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "txid": "string"
                        }
                      ],
                      "owner_info": {},
                      "reject": [
                        {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "reject_code": "BVRC001",
                          "reject_message": "string"
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/ownerships/verify-token/{token}": {
      "get": {
        "tags": [
          "Hub/ownerships"
        ],
        "summary": "the API would be used when you received a link that asks you to validate the address whether belong to you",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "JWT token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/ownerships/{id}": {
      "get": {
        "tags": [
          "Hub/ownerships"
        ],
        "summary": "the API would be used when you want to see a validation detail",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ownership identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/model.Ownership"
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/schema.RespWithPaging"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/rollback": {
      "get": {
        "tags": [
          "Hub/rollback"
        ],
        "summary": "get rollback",
        "description": "only admin could get encrypted credentials",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/model.Rollback"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/schema.RespWithPaging"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      },
      "put": {
        "tags": [
          "Hub/rollback"
        ],
        "summary": "update rollback",
        "description": "only allow admin to use this method",
        "requestBody": {
          "description": "put /rollback params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PutRollbackInout"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/services": {
      "get": {
        "tags": [
          "Hub/services"
        ],
        "summary": "get services",
        "description": "only admin could get encrypted credentials",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "filter services by service identifier",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "provider",
            "in": "query",
            "description": "filter services by provider",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "Sygna_Bridge",
                  "Elliptic",
                  "Chainalysis V1",
                  "Chainalysis V2",
                  "ComplyAdvantage",
                  "Merkle Science",
                  "TRISA",
                  "Dow Jones",
                  "Coinfirm",
                  "Coinfirm (Sandbox)"
                ]
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "filter services by type",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "Travel Rule",
                  "Blockchain Analytics",
                  "Sanction Screening"
                ]
              }
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "filter services by if status is activated",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean"
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "filter services by status",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "activated",
                  "deactivated",
                  "disabled",
                  "upcoming",
                  "expired"
                ]
              }
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "description": "filter services by a range of start time(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "end_time",
            "in": "query",
            "description": "filter services by a range of end time(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "filter data by a range of created data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Specifies sequences to sort data (ie.orderby=id:desc)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "description": "filter data by a range of updated data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/model.Service"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/schema.RespWithPaging"
                    }
                  ]
                },
                "examples": {
                  "Sygna_EmailProtocol": {
                    "value": {
                      "data": [
                        {
                          "id": "10897beb-1b44-4fe5-b6f8-8a5f76bxxxxx",
                          "created_at": "2023-04-13T10:11:09.651Z",
                          "updated_at": "2023-04-13T10:11:09.651Z",
                          "vasp_code": "XXXXXXXX",
                          "provider": "Sygna_EmailProtocol",
                          "type": "Travel Rule",
                          "settings": {
                            "expire_days": 30
                          },
                          "status": "activated",
                          "start_time": "2023-04-13T10:11:09.650Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      },
      "put": {
        "tags": [
          "Hub/services"
        ],
        "summary": "update services",
        "description": "only allow admin to use this method\nuse GET /services/supported to understand which credential is required by provider",
        "requestBody": {
          "description": "put /services params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PutServicesInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "credential": {},
                      "is_active": true,
                      "provider": "Elliptic",
                      "settings": {},
                      "type": "Blockchain Analytics"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      },
      "post": {
        "tags": [
          "Hub/services"
        ],
        "summary": "create services",
        "description": "Please must input “type”: “Travel Rule” & “provider”: “Sygna_Bridge” to enable your Sygna Hub’s data transfer via Sygna Bridge Travel Rule Protocol. (Only allow admin to use this method use GET /services/supported to understand which credential is required by provider.)",
        "requestBody": {
          "description": "post /services params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PostServicesInput"
                }
              },
              "examples": {
                "Chainalysis V1": {
                  "value": [
                    {
                      "type": "Blockchain Analytics",
                      "provider": "Chainalysis V1",
                      "is_active": true,
                      "credential": {
                        "api_key": "aaaaaa"
                      }
                    }
                  ]
                },
                "Chainalysis V2": {
                  "value": [
                    {
                      "type": "Blockchain Analytics",
                      "provider": "Chainalysis V2",
                      "is_active": true,
                      "credential": {
                        "api_key": "bbbbb"
                      },
                      "settings": {
                        "high_risk_score": "HIGH"
                      }
                    }
                  ]
                },
                "Elliptic": {
                  "value": [
                    {
                      "type": "Blockchain Analytics",
                      "provider": "Elliptic",
                      "is_active": true,
                      "credential": {
                        "secret": "aaaaa",
                        "api_key": "bbbbb"
                      },
                      "settings": {
                        "high_risk_score": 8
                      }
                    }
                  ]
                },
                "Coinfirm": {
                  "value": [
                    {
                      "type": "Blockchain Analytics",
                      "provider": "Coinfirm",
                      "is_active": true,
                      "credential": {
                        "api_key": "bbbb"
                      },
                      "settings": {
                        "high_risk_score": 50
                      }
                    }
                  ]
                },
                "Coinfirm (Sandbox)": {
                  "value": [
                    {
                      "type": "Blockchain Analytics",
                      "provider": "Coinfirm (Sandbox)",
                      "is_active": true,
                      "credential": {
                        "sandbox_access_token": "aaaa"
                      },
                      "settings": {
                        "high_risk_score": 50
                      }
                    }
                  ]
                },
                "Merkle Science": {
                  "value": [
                    {
                      "type": "Blockchain Analytics",
                      "provider": "Merkle Science",
                      "is_active": true,
                      "credential": {},
                      "settings": {
                        "high_risk_score": 3
                      }
                    }
                  ]
                },
                "ComplyAdvantage": {
                  "value": [
                    {
                      "type": "Sanction Screening",
                      "provider": "ComplyAdvantage",
                      "is_active": true,
                      "credential": {
                        "api_key": "bbbb"
                      },
                      "settings": {
                        "fuzziness": 0.6
                      }
                    }
                  ]
                },
                "Dow Jones": {
                  "value": [
                    {
                      "type": "Sanction Screening",
                      "provider": "Dow Jones",
                      "is_active": true,
                      "credential": {
                        "password": "password",
                        "username": "aaaaaaaa",
                        "client_id": "xxxxxx"
                      },
                      "settings": {
                        "content_set": [
                          "Watchlist"
                        ],
                        "search_type": "Near"
                      }
                    }
                  ]
                },
                "Sygna_Bridge": {
                  "value": [
                    {
                      "type": "Travel Rule",
                      "provider": "Sygna_Bridge",
                      "is_active": true,
                      "credential": {
                        "private_key": "xxxx"
                      },
                      "settings": {
                        "expire_days": 30,
                        "need_validate_address": true
                      }
                    }
                  ]
                },
                "TRISA": {
                  "value": [
                    {
                      "type": "Travel Rule",
                      "provider": "TRISA",
                      "is_active": true,
                      "credential": {
                        "p12": "aaaa",
                        "password": "aaaa",
                        "registration_id": "tttt"
                      }
                    }
                  ]
                },
                "Veriscope on Shyft": {
                  "value": [
                    {
                      "type": "Travel Rule",
                      "provider": "Veriscope on Shyft",
                      "is_active": true,
                      "credential": {
                        "private_key": "aaaa"
                      }
                    }
                  ]
                },
                "Refinitiv (World-Check One)": {
                  "value": [
                    {
                      "type": "Sanction Screening",
                      "provider": "World-Check",
                      "is_active": true,
                      "credential": {
                        "api-key": "xxxxxx",
                        "secret": "xxxxxx"
                      },
                      "settings": {
                        "provider_types": [
                          "Watchlist"
                        ]
                      }
                    }
                  ]
                },
                "Sygna_EmailProtocol": {
                  "value": [
                    {
                      "type": "Travel Rule",
                      "provider": "Sygna_EmailProtocol",
                      "settings": {
                        "expire_days": 30
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/services/supported": {
      "get": {
        "tags": [
          "Hub/services"
        ],
        "summary": "get supported services and its config",
        "description": "only allow admin to use this method",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "filter services by service identifier",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "provider",
            "in": "query",
            "description": "filter services by provider",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "Sygna_Bridge",
                  "Elliptic",
                  "Chainalysis V1",
                  "Chainalysis V2",
                  "ComplyAdvantage",
                  "Merkle Science",
                  "TRISA",
                  "Dow Jones",
                  "Coinfirm",
                  "Coinfirm (Sandbox)",
                  "World-Check"
                ]
              }
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "filter services by type",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "Travel Rule",
                  "Blockchain Analytics",
                  "Sanction Screening"
                ]
              }
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "filter services by if status is activated",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean"
              }
            }
          },
          {
            "name": "editable",
            "in": "query",
            "description": "filter services by editable",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean"
              }
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "filter data by a range of created data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Specifies sequences to sort data (ie.orderby=id:desc)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "description": "filter data by a range of updated data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "extra_data": {
                      "type": "object"
                    },
                    "help": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "stack": {
                      "type": "object"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/settings": {
      "get": {
        "tags": [
          "Hub/settings"
        ],
        "summary": "get settings",
        "description": "only admin could get encrypted credentials",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/model.Setting"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/schema.RespWithPaging"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      },
      "put": {
        "tags": [
          "Hub/settings"
        ],
        "summary": "update settings",
        "description": "only allow admin to use this method\nPlease also check the API response of GET `/settings/supported` to get the complete supported settings configuration.",
        "requestBody": {
          "description": "put /settings params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PostSettingInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "type": "blockchain_analytics_timing",
                      "rule": {
                        "originator": "before sending",
                        "beneficiary": "receiving"
                      }
                    },
                    {
                      "type": "sanction_screening_timing",
                      "rule": {
                        "originator": "before sending",
                        "beneficiary": "receiving"
                      }
                    },
                    {
                      "type": "automation_settings",
                      "rule": {
                        "auto_accept": true
                      }
                    },
                    {
                      "type": "personal_info_checking_items",
                      "rule": {
                        "follow_ivms101": true,
                        "name_checking_rule": "one_name_matched"
                      }
                    },
                    {
                      "type": "forced_sending_when_VASP_is_not_healthy",
                      "rule": {
                        "forced_sending": true
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      },
      "post": {
        "tags": [
          "Hub/settings"
        ],
        "summary": "create settings",
        "description": "only allow admin to use this method. \nPlease also check the API response of GET `/settings/supported` to get the complete supported settings configuration.",
        "requestBody": {
          "description": "post /settings params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "rule": {
                      "type": "object",
                      "properties": {
                        "beneficiary": {
                          "type": "string",
                          "default": "receiving"
                        },
                        "originator": {
                          "type": "string",
                          "default": "receiving"
                        },
                        "follow_ivms101": {
                          "type": "boolean",
                          "default": true
                        },
                        "name_checking_rule": {
                          "type": "string",
                          "default": "one_name_matched"
                        },
                        "english_name_case_sensitivity": {
                          "type": "boolean",
                          "default": true
                        },
                        "full_width_space_equals_half_width_space": {
                          "type": "boolean",
                          "default": false
                        },
                        "auto_accept": {
                          "type": "boolean",
                          "default": true
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "type": "blockchain_analytics_timing",
                      "rule": {
                        "originator": "before sending",
                        "beneficiary": "receiving"
                      }
                    },
                    {
                      "type": "sanction_screening_timing",
                      "rule": {
                        "originator": "before sending",
                        "beneficiary": "receiving"
                      }
                    },
                    {
                      "type": "automation_settings",
                      "rule": {
                        "auto_accept": true
                      }
                    },
                    {
                      "type": "personal_info_checking_items",
                      "rule": {
                        "follow_ivms101": true,
                        "name_checking_rule": "one_name_matched"
                      }
                    },
                    {
                      "type": "forced_sending_when_VASP_is_not_healthy",
                      "rule": {
                        "forced_sending": true
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/settings/default": {
      "get": {
        "tags": [
          "Hub/settings"
        ],
        "summary": "get default settings",
        "description": "only allow admin to use this method.\nPlease also check the API response of GET `/settings/supported` to get the complete supported settings configuration.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "rule": {
                            "type": "object",
                            "properties": {
                              "beneficiary": {
                                "type": "string",
                                "default": "receiving"
                              },
                              "originator": {
                                "type": "string",
                                "default": "receiving"
                              },
                              "follow_ivms101": {
                                "type": "boolean",
                                "default": true
                              },
                              "name_checking_rule": {
                                "type": "string",
                                "default": "one_name_matched"
                              },
                              "english_name_case_sensitivity": {
                                "type": "boolean",
                                "default": true
                              },
                              "auto_accept": {
                                "type": "boolean",
                                "default": true
                              },
                              "forced_sending": {
                                "type": "boolean",
                                "default": true
                              },
                              "full_width_space_equals_half_width_space": {
                                "type": "boolean",
                                "default": false
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "data": [
                        {
                          "type": "string",
                          "rule": {
                            "beneficiary": "receiving",
                            "originator": "receiving",
                            "follow_ivms101": true,
                            "name_checking_rule": "one_name_matched",
                            "english_name_case_sensitivity": true,
                            "auto_accept": true,
                            "forced_sending": true,
                            "full_width_space_equals_half_width_space": false
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/settings/supported": {
      "get": {
        "tags": [
          "Hub/settings"
        ],
        "summary": "get supported settings",
        "description": "only allow admin to use this method\nPlease refer the columns in this API response to and set them in API <POST /settings>.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "rule": {
                            "type": "object",
                            "properties": {
                              "schema": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "required": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "originator": {
                                        "type": "object",
                                        "properties": {
                                          "enum": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "beneficiary": {
                                        "type": "object",
                                        "properties": {
                                          "enum": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "follow_ivms101": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "name_checking_rule": {
                                        "type": "object",
                                        "properties": {
                                          "enum": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "natural_person": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          },
                                          "required": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "properties": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "required": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name_identifier": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "required": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "properties": {
                                                            "type": "object",
                                                            "properties": {
                                                              "primary_identifier": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "const": {
                                                                    "type": "boolean"
                                                                  }
                                                                }
                                                              },
                                                              "secondary_identifier": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "type": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "name_identifier_type": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "const": {
                                                                    "type": "boolean"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        }
                                                      },
                                                      "local_name_identifier": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "required": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "properties": {
                                                            "type": "object",
                                                            "properties": {
                                                              "primary_identifier": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "const": {
                                                                    "type": "boolean"
                                                                  }
                                                                }
                                                              },
                                                              "secondary_identifier": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "type": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "name_identifier_type": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "const": {
                                                                    "type": "boolean"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        }
                                                      },
                                                      "phonetic_name_identifier": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "required": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "properties": {
                                                            "type": "object",
                                                            "properties": {
                                                              "primary_identifier": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "const": {
                                                                    "type": "boolean"
                                                                  }
                                                                }
                                                              },
                                                              "secondary_identifier": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "type": {
                                                                    "type": "string"
                                                                  }
                                                                }
                                                              },
                                                              "name_identifier_type": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "const": {
                                                                    "type": "boolean"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "customer_identification": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "geographic_address": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "address_type": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "department": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "sub_department": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "street_name": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "building_number": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "building_name": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "floor": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "post_box": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "room": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "post_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "town_name": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "town_location_name": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "district_name": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "country_sub_division": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "address_line": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "country": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "minProperties": {
                                                    "type": "integer"
                                                  },
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "national_identification": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "national_identifier": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "national_identifier_type": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "country_of_issue": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "registration_authority": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "minProperties": {
                                                    "type": "integer"
                                                  },
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "date_and_place_of_birth": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "date_of_birth": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "place_of_birth": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "minProperties": {
                                                    "type": "integer"
                                                  },
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "country_of_residence": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "additionalProperties": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "legal_person": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string"
                                          },
                                          "required": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "properties": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "required": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name_identifier": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "required": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "properties": {
                                                            "type": "object",
                                                            "properties": {
                                                              "legal_person_name": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "const": {
                                                                    "type": "boolean"
                                                                  }
                                                                }
                                                              },
                                                              "legal_person_name_identifier_type": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "const": {
                                                                    "type": "boolean"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        }
                                                      },
                                                      "local_name_identifier": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "required": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "properties": {
                                                            "type": "object",
                                                            "properties": {
                                                              "legal_person_name": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "const": {
                                                                    "type": "boolean"
                                                                  }
                                                                }
                                                              },
                                                              "legal_person_name_identifier_type": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "const": {
                                                                    "type": "boolean"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        }
                                                      },
                                                      "phonetic_name_identifier": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          },
                                                          "required": {
                                                            "type": "array",
                                                            "items": {
                                                              "type": "string"
                                                            }
                                                          },
                                                          "properties": {
                                                            "type": "object",
                                                            "properties": {
                                                              "legal_person_name": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "const": {
                                                                    "type": "boolean"
                                                                  }
                                                                }
                                                              },
                                                              "legal_person_name_identifier_type": {
                                                                "type": "object",
                                                                "properties": {
                                                                  "const": {
                                                                    "type": "boolean"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "additionalProperties": {
                                                            "type": "boolean"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "customer_identification": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "geographic_address": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "address_type": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "department": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "sub_department": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "street_name": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "building_number": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "building_name": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "floor": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "post_box": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "room": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "post_code": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "town_name": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "town_location_name": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "district_name": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "country_sub_division": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "address_line": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "country": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "minProperties": {
                                                    "type": "integer"
                                                  },
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "national_identification": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  },
                                                  "properties": {
                                                    "type": "object",
                                                    "properties": {
                                                      "national_identifier": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "national_identifier_type": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "country_of_issue": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      },
                                                      "registration_authority": {
                                                        "type": "object",
                                                        "properties": {
                                                          "type": {
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "minProperties": {
                                                    "type": "integer"
                                                  },
                                                  "additionalProperties": {
                                                    "type": "boolean"
                                                  }
                                                }
                                              },
                                              "country_of_registration": {
                                                "type": "object",
                                                "properties": {
                                                  "type": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "additionalProperties": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "english_name_case_sensitivity": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "auto_accept": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "full_width_space_equals_half_width_space": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "forced_sending": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "boolean"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "additionalProperties": {
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "data": [
                        {
                          "type": "string",
                          "rule": {
                            "schema": {
                              "type": "string",
                              "required": [
                                "string"
                              ],
                              "properties": {
                                "originator": {
                                  "enum": [
                                    "string"
                                  ],
                                  "type": "string"
                                },
                                "beneficiary": {
                                  "enum": [
                                    "string"
                                  ],
                                  "type": "string"
                                },
                                "follow_ivms101": {
                                  "type": true
                                },
                                "name_checking_rule": {
                                  "enum": [
                                    "string"
                                  ],
                                  "type": "string"
                                },
                                "natural_person": {
                                  "type": "string",
                                  "required": [
                                    "string"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "required": [
                                        "string"
                                      ],
                                      "properties": {
                                        "name_identifier": {
                                          "type": "string",
                                          "required": [
                                            "string"
                                          ],
                                          "properties": {
                                            "primary_identifier": {
                                              "const": true
                                            },
                                            "secondary_identifier": {
                                              "type": "string"
                                            },
                                            "name_identifier_type": {
                                              "const": true
                                            }
                                          },
                                          "additionalProperties": true
                                        },
                                        "local_name_identifier": {
                                          "type": "string",
                                          "required": [
                                            "string"
                                          ],
                                          "properties": {
                                            "primary_identifier": {
                                              "const": true
                                            },
                                            "secondary_identifier": {
                                              "type": "string"
                                            },
                                            "name_identifier_type": {
                                              "const": true
                                            }
                                          },
                                          "additionalProperties": true
                                        },
                                        "phonetic_name_identifier": {
                                          "type": "string",
                                          "required": [
                                            "string"
                                          ],
                                          "properties": {
                                            "primary_identifier": {
                                              "const": true
                                            },
                                            "secondary_identifier": {
                                              "type": "string"
                                            },
                                            "name_identifier_type": {
                                              "const": true
                                            }
                                          },
                                          "additionalProperties": true
                                        }
                                      },
                                      "additionalProperties": true
                                    },
                                    "customer_identification": {
                                      "type": "string"
                                    },
                                    "geographic_address": {
                                      "type": "string",
                                      "properties": {
                                        "address_type": {
                                          "type": "string"
                                        },
                                        "department": {
                                          "type": "string"
                                        },
                                        "sub_department": {
                                          "type": "string"
                                        },
                                        "street_name": {
                                          "type": "string"
                                        },
                                        "building_number": {
                                          "type": "string"
                                        },
                                        "building_name": {
                                          "type": "string"
                                        },
                                        "floor": {
                                          "type": "string"
                                        },
                                        "post_box": {
                                          "type": "string"
                                        },
                                        "room": {
                                          "type": "string"
                                        },
                                        "post_code": {
                                          "type": "string"
                                        },
                                        "town_name": {
                                          "type": "string"
                                        },
                                        "town_location_name": {
                                          "type": "string"
                                        },
                                        "district_name": {
                                          "type": "string"
                                        },
                                        "country_sub_division": {
                                          "type": "string"
                                        },
                                        "address_line": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      },
                                      "minProperties": 0,
                                      "additionalProperties": true
                                    },
                                    "national_identification": {
                                      "type": "string",
                                      "properties": {
                                        "national_identifier": {
                                          "type": "string"
                                        },
                                        "national_identifier_type": {
                                          "type": "string"
                                        },
                                        "country_of_issue": {
                                          "type": "string"
                                        },
                                        "registration_authority": {
                                          "type": "string"
                                        }
                                      },
                                      "minProperties": 0,
                                      "additionalProperties": true
                                    },
                                    "date_and_place_of_birth": {
                                      "type": "string",
                                      "properties": {
                                        "date_of_birth": {
                                          "type": "string"
                                        },
                                        "place_of_birth": {
                                          "type": "string"
                                        }
                                      },
                                      "minProperties": 0,
                                      "additionalProperties": true
                                    },
                                    "country_of_residence": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": true
                                },
                                "legal_person": {
                                  "type": "string",
                                  "required": [
                                    "string"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "required": [
                                        "string"
                                      ],
                                      "properties": {
                                        "name_identifier": {
                                          "type": "string",
                                          "required": [
                                            "string"
                                          ],
                                          "properties": {
                                            "legal_person_name": {
                                              "const": true
                                            },
                                            "legal_person_name_identifier_type": {
                                              "const": true
                                            }
                                          },
                                          "additionalProperties": true
                                        },
                                        "local_name_identifier": {
                                          "type": "string",
                                          "required": [
                                            "string"
                                          ],
                                          "properties": {
                                            "legal_person_name": {
                                              "const": true
                                            },
                                            "legal_person_name_identifier_type": {
                                              "const": true
                                            }
                                          },
                                          "additionalProperties": true
                                        },
                                        "phonetic_name_identifier": {
                                          "type": "string",
                                          "required": [
                                            "string"
                                          ],
                                          "properties": {
                                            "legal_person_name": {
                                              "const": true
                                            },
                                            "legal_person_name_identifier_type": {
                                              "const": true
                                            }
                                          },
                                          "additionalProperties": true
                                        }
                                      },
                                      "additionalProperties": true
                                    },
                                    "customer_identification": {
                                      "type": "string"
                                    },
                                    "geographic_address": {
                                      "type": "string",
                                      "properties": {
                                        "address_type": {
                                          "type": "string"
                                        },
                                        "department": {
                                          "type": "string"
                                        },
                                        "sub_department": {
                                          "type": "string"
                                        },
                                        "street_name": {
                                          "type": "string"
                                        },
                                        "building_number": {
                                          "type": "string"
                                        },
                                        "building_name": {
                                          "type": "string"
                                        },
                                        "floor": {
                                          "type": "string"
                                        },
                                        "post_box": {
                                          "type": "string"
                                        },
                                        "room": {
                                          "type": "string"
                                        },
                                        "post_code": {
                                          "type": "string"
                                        },
                                        "town_name": {
                                          "type": "string"
                                        },
                                        "town_location_name": {
                                          "type": "string"
                                        },
                                        "district_name": {
                                          "type": "string"
                                        },
                                        "country_sub_division": {
                                          "type": "string"
                                        },
                                        "address_line": {
                                          "type": "string"
                                        },
                                        "country": {
                                          "type": "string"
                                        }
                                      },
                                      "minProperties": 0,
                                      "additionalProperties": true
                                    },
                                    "national_identification": {
                                      "type": "string",
                                      "properties": {
                                        "national_identifier": {
                                          "type": "string"
                                        },
                                        "national_identifier_type": {
                                          "type": "string"
                                        },
                                        "country_of_issue": {
                                          "type": "string"
                                        },
                                        "registration_authority": {
                                          "type": "string"
                                        }
                                      },
                                      "minProperties": 0,
                                      "additionalProperties": true
                                    },
                                    "country_of_registration": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": true
                                },
                                "english_name_case_sensitivity": {
                                  "type": true
                                },
                                "auto_accept": {
                                  "type": true
                                },
                                "full_width_space_equals_half_width_space": {
                                  "type": true
                                },
                                "forced_sending": {
                                  "type": true
                                }
                              },
                              "additionalProperties": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "Hub/transactions"
        ],
        "summary": "get transactions",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "filter transactions by transaction identifier",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "filter transactions by the customer's name ( the phonetic name and local name is also applicable)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "address",
            "in": "query",
            "description": "filter transactions by transaction address",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "tx_id",
            "in": "query",
            "description": "filter transactions by transaction id on blockchain",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "currency_id",
            "in": "query",
            "description": "filter transactions by transaction currency id",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "last_screened",
            "in": "query",
            "description": "filter transactions by a range of last screened(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "risk_score_provider",
            "in": "query",
            "description": "filter transactions by risk score provider",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "risk_score",
            "in": "query",
            "description": "A URL parameter that specifies the range of risk score. This format should be {provider:from,to} (ie.Elliptic:0,10 or Chainalysis V1:low,high).",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "filter transactions by transaction status(0:Processing,1:Blocked,2:Pending On Beneficiary,3:Transfer To Beneficiary Failed,4:Pending On Originator,5:Transfer To Originator Failed,6:Confirmed,7:Confirm Failed,8:Rejected)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "status_text",
            "in": "query",
            "description": "filter transactions by transaction status text",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "Processing",
                  "Blocked",
                  "Pending On Beneficiary",
                  "Transfer To Beneficiary Failed",
                  "Pending On Originator",
                  "Transfer To Originator Failed",
                  "Confirmed",
                  "Confirm Failed",
                  "Rejected"
                ]
              }
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "A URL parameter that specifies the range of value. This format should be {from,to} (ie.value=0.1,10.5 means filtering transactions by value between 0.1 and 10.5 inclusive).",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sanction_score",
            "in": "query",
            "description": "A URL parameter that specifies the range of sanction screening score. This format should be {from,to} (ie.sanction_score=0.1,10.5 means filtering transactions by sanction_score between 0.1 and 10.5 inclusive).",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "protocol",
            "in": "query",
            "description": "filter transactions by transaction protocol",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "Sygna_Bridge",
                  "Sygna_EmailProtocol",
                  "TRISA",
                  "Veriscope on Shyft"
                ]
              }
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "filter data by a range of created data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Specifies sequences to sort data (ie.orderby=id:desc)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "description": "filter data by a range of updated data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/schema.GetTransactionsOutput"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/schema.RespWithPaging"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      },
      "post": {
        "tags": [
          "Hub/transactions"
        ],
        "summary": "create transactions",
        "requestBody": {
          "description": "post /transactions params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/PostTransactionUnknown"
                    },
                    {
                      "$ref": "#/components/schemas/PostTransactionSygnaBridge"
                    },
                    {
                      "$ref": "#/components/schemas/PostTransactionSygnaEmail"
                    },
                    {
                      "$ref": "#/components/schemas/PostTransactionTRISA"
                    },
                    {
                      "$ref": "#/components/schemas/PostTransactionShyft"
                    }
                  ]
                }
              },
              "examples": {
                "Unknown": {
                  "value": [
                    {
                      "customer_id": "6bf8c118-3395-40fa-83d3-be3be1xxxxx",
                      "currency_id": "sygna:0x80000000",
                      "value": "111",
                      "originator": {
                        "assets": [
                          "190c2b76-6a93-4f58-ae3b-2b21b01xxxxx"
                        ]
                      },
                      "beneficiary": {
                        "addrs": [
                          {
                            "address": "3MBWbunF8kLFA5u9E8mk4MYkWKJNexxxxx",
                            "extra_info": {}
                          }
                        ],
                        "customer_type": 0
                      }
                    }
                  ]
                },
                "Sygna Bridge": {
                  "value": [
                    {
                      "customer_id": "6bf8c118-3395-40fa-83d3-be3be1axxxxx",
                      "currency_id": "sygna:0x80000000",
                      "value": "111",
                      "originator": {
                        "assets": [
                          "190c2b76-6a93-4f58-ae3b-2b21b01xxxxx"
                        ]
                      },
                      "beneficiary": {
                        "addrs": [
                          {
                            "address": "3MBWbunF8kLFA5u9E8mk4MYkWKJNexxxxx",
                            "extra_info": {}
                          }
                        ],
                        "customer_type": 0,
                        "vasp_code": "XXXXXXXX",
                        "private_info": {
                          "natural_person_name": {
                            "name": {
                              "last_name": "sygna sample"
                            }
                          }
                        }
                      },
                      "expire_date": 1681705803,
                      "protocol": "Sygna_Bridge"
                    }
                  ]
                },
                "Sygna Email": {
                  "value": [
                    {
                      "customer_id": "6bf8c118-3395-40fa-83d3-be3be1axxxxx",
                      "currency_id": "sygna:0x80000000",
                      "value": "222",
                      "originator": {
                        "assets": [
                          "190c2b76-6a93-4f58-ae3b-2b21b01xxxxx"
                        ]
                      },
                      "beneficiary": {
                        "addrs": [
                          {
                            "address": "bc1qgdjqv0av3q56jvd82tkdjpy7gdp9ut8tlqmgrpmv24sq90ecnvqqjxxxxx",
                            "extra_info": {}
                          }
                        ]
                      },
                      "protocol": "Sygna_EmailProtocol"
                    }
                  ]
                },
                "TRISA": {
                  "value": [
                    {
                      "customer_id": "78045c2e-f82a-4d85-ad80-a3a450xxxxx",
                      "currency_id": "sygna:0x80000000",
                      "value": "444",
                      "originator": {
                        "assets": [
                          "0bf367bb-7144-49ba-816b-ef4071xxxxx"
                        ]
                      },
                      "beneficiary": {
                        "addrs": [
                          {
                            "address": "3MBWbunF8kLFA5u9E8mk4MYkWKJNexxxxx",
                            "extra_info": {}
                          }
                        ],
                        "customer_type": 0,
                        "vasp_code": "COOLBITX LTD. TAIWAN BRANCH (CAYMAN) - DEV-HUB",
                        "private_info": {
                          "natural_person_name": {
                            "name": {
                              "last_name": "Coolbitx"
                            }
                          }
                        }
                      },
                      "txid": "xxxxxxxxxxxx",
                      "protocol": "TRISA"
                    }
                  ]
                },
                "Veriscope on Shyft": {
                  "value": [
                    {
                      "customer_id": "14e67e17-7b02-43a5-8e2e-06a4adxxxxx",
                      "currency_id": "sygna:0x80000000",
                      "value": "111",
                      "originator": {
                        "assets": [
                          "5b6c6789-6c9c-4239-a4d6-f7c247xxxxx"
                        ]
                      },
                      "beneficiary": {
                        "addrs": [
                          {
                            "address": "1LinPJGYAVsraWnyEY4iDPVroD1Fxxxxxx",
                            "extra_info": {}
                          }
                        ]
                      },
                      "protocol": "Veriscope on Shyft"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/transactions/email-protocol/deposits": {
      "post": {
        "tags": [
          "Hub/transactions/email-protocol"
        ],
        "summary": "send email to originator VASP and ask him to fill customer information",
        "description": "only for email protocol",
        "requestBody": {
          "description": "post /transactions/email-protocol/deposits params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/model.PostEmailProtocolDepositInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "customer_id": "b52e9794-1ea1-42ad-8a59-db582bf7bb07",
                      "currency_id": "sygna:0x80000000",
                      "value": "2",
                      "beneficiary": {
                        "assets": [
                          "be54f510-8859-405d-a104-7eaeb2c53630"
                        ]
                      },
                      "originator": {
                        "addrs": [
                          {
                            "address": "1Bxzf2hA8FrRkpKU3VQNrgLu6iEGo6bUm7",
                            "extra_info": {}
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/transactions/email-protocol/deposits/permission": {
      "patch": {
        "tags": [
          "Hub/transactions/email-protocol"
        ],
        "summary": "accept or reject this transaction when received customer information from originator",
        "description": "only for email protocol",
        "requestBody": {
          "description": "patch /transactions/email-protocol/deposits/permission params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PatchPermissionInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/transactions/email-protocol/deposits/permission-request": {
      "patch": {
        "tags": [
          "Hub/transactions/email-protocol"
        ],
        "summary": "send own customer information to beneficiary or reject this request when received email from beneficiary",
        "description": "only for email protocol",
        "requestBody": {
          "description": "patch /transactions/email-protocol/deposits/permission-request params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PostEmailProtocolPermissionInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/transactions/email-protocol/deposits/txid": {
      "patch": {
        "tags": [
          "Hub/transactions/email-protocol"
        ],
        "summary": "send transaction hash when received accept from beneficiary",
        "description": "only for email protocol",
        "requestBody": {
          "description": "patch /transactions/email-protocol/deposits/txid params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PatchTxIdInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/transactions/email-protocol/permission": {
      "post": {
        "tags": [
          "Hub/transactions/email-protocol"
        ],
        "summary": "send permission to originator from email protocol VASP",
        "description": "only for email protocol",
        "requestBody": {
          "description": "post /transactions/email-protocol/permission params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PostEmailProtocolPermissionInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "customer": {
                        "address": {
                          "address_line": [
                            "string"
                          ],
                          "address_type": "string",
                          "building_name": "string",
                          "building_number": "string",
                          "country": "string",
                          "country_sub_division": "string",
                          "department": "string",
                          "district_name": "string",
                          "floor": "string",
                          "post_box": "string",
                          "post_code": "string",
                          "room": "string",
                          "street_name": "string",
                          "sub_department": "string",
                          "town_location_name": "string",
                          "town_name": "string"
                        },
                        "assets": [
                          {
                            "address": "string",
                            "currency_id": "string",
                            "extra_info": {},
                            "value": "string"
                          }
                        ],
                        "assets_ignore_kyt": true,
                        "birth": {
                          "date_of_birth": "string",
                          "place_of_birth": "string"
                        },
                        "country": "string",
                        "customer_id": "string",
                        "customer_type": 0,
                        "legal_person_name": {
                          "local_name": "string",
                          "name": "string",
                          "phonetic_name": "string"
                        },
                        "national": {
                          "country_of_issue": "string",
                          "national_identifier": "string",
                          "national_identifier_type": "string",
                          "registration_authority": "string"
                        },
                        "natural_person_name": {
                          "local_name": {
                            "first_name": "string",
                            "last_name": "string"
                          },
                          "name": {
                            "first_name": "string",
                            "last_name": "string"
                          },
                          "phonetic_name": {
                            "first_name": "string",
                            "last_name": "string"
                          }
                        }
                      },
                      "forced_sending_when_VASP_is_not_healthy": true,
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "permission_status": 0,
                      "reject_code": "BVRC001",
                      "reject_message": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/transactions/email-protocol/verify-token/{token}": {
      "get": {
        "tags": [
          "Hub/transactions/email-protocol"
        ],
        "summary": "verify if token is valid and get its transaction identifier",
        "description": "only for email protocol",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "JWT token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/transactions/permission": {
      "patch": {
        "tags": [
          "Hub/transactions"
        ],
        "summary": "send permission to originator",
        "requestBody": {
          "description": "patch /transactions/permission params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "forced_sending_when_VASP_is_not_healthy": {
                      "type": "boolean",
                      "description": "Please check the object information in the API <POST /transactions>."
                    },
                    "id": {
                      "type": "string"
                    },
                    "permission_status": {
                      "type": "integer"
                    },
                    "reject_code": {
                      "type": "string",
                      "description": "- When \"auto-accept\" is set to \"on\":\r\n    - If no reject code or message is entered, the suggested reject code and message will be transmitted to the Originator VASP.\r\n    - The Beneficiary VASP can intentionally leave the \"reject_code\" and \"reject_message\" parameters blank to remove the suggested reject code and message."
                    },
                    "reject_message": {
                      "type": "string",
                      "description": "- When \"auto-accept\" is set to \"on\":\r\n    - If no reject code or message is entered, the suggested reject code and message will be transmitted to the Originator VASP.\r\n    - The Beneficiary VASP can intentionally leave the \"reject_code\" and \"reject_message\" parameters blank to remove the suggested reject code and message."
                    }
                  },
                  "required": [
                    "id",
                    "permission_status"
                  ]
                }
              },
              "examples": {
                "Accept": {
                  "value": [
                    {
                      "permission_status": 0,
                      "id": "b6d9e3f0-533b-4867-a3ed-17e84b9cd32c"
                    }
                  ]
                },
                "Reject": {
                  "value": [
                    {
                      "forced_sending_when_VASP_is_not_healthy": true,
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "permission_status": 1,
                      "reject_code": "BVRC999",
                      "reject_message": "Unknown address"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/transactions/sanction-match": {
      "post": {
        "tags": [
          "Hub/transactions/sanction-match"
        ],
        "summary": "let user do sanction screening",
        "requestBody": {
          "description": "post /transactions/sanction-match params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/schema.PostSanctionMatchInput"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "name": "willy",
                    "customer_type": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/sanctionscreening.GetSanctionScoreOutput"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/transactions/sanction-report/{searchId}": {
      "get": {
        "tags": [
          "Hub/transactions/sanction-match"
        ],
        "summary": "get report from sanction screening service",
        "parameters": [
          {
            "name": "searchId",
            "in": "path",
            "description": "an identifier from sanction screening service",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "binary",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/pdf": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/transactions/status": {
      "patch": {
        "tags": [
          "Hub/transactions"
        ],
        "summary": "unblock or cancel transactions",
        "requestBody": {
          "description": "patch /transactions/status params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PatchTransactionsStatus"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/transactions/txid": {
      "patch": {
        "tags": [
          "Hub/transactions"
        ],
        "summary": "send transaction identifier on blockchain to beneficiary",
        "requestBody": {
          "description": "patch /transactions/txid params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PatchTxIdInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "txid": "tx111111111",
                      "id": "9bc36928-7328-4b01-9635-a8676dc847ff"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/transactions/wallet-address-filter": {
      "post": {
        "tags": [
          "Hub/transactions"
        ],
        "summary": "determine whether a specific wallet address belongs to a VASP or an unhosted wallet",
        "description": "The Sygna Wallet Address Filter (WAF) API is a key feature that enables you to determine whether a specific wallet address belongs to a VASP or an unhosted wallet based on the Sygna server's directory and your selected blockchain analytics (KYT) vendor. If the wallet address is associated with an un-hosted wallet, your KYT vendor will return a risk score for the address. If you have not yet collaborated with a blockchain analytics vendor, please contact services@sygna.io",
        "requestBody": {
          "description": "post /transactions/wallet-address-filter params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PostWalletAddressFilterInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "addrs": [
                        "3MBWbunF8kLFA5u9E8mk4MYkWKJNedpx55"
                      ],
                      "currency_id": "sygna:0x80000000"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "- SYGNA_VASP: This category is determined based on the data in the Sygna server's wallet address directory. If the sending and receiving addresses are listed in the API Bridge (/permission-request) or API Hub (/transactions>), they will be classified under this category. \n- EMAIL_PROTOCOL: This category is determined based on the data in the Sygna server's wallet address directory. If the wallet address has been onboarded during the Sygna Email Protocol VASP account registration, it will be classified under this category. \n- OTHER_VASP: This category is determined based on the data returned by the selected Blockchain Analytics (KYT) service provider. \n- PRIVATE_WALLET: This category is determined based on the data returned by the selected Blockchain Analytics (KYT) service provider.\n- FAILED: This category is displayed when the selected Blockchain Analytics (KYT) service is currently unavailable."
                          },
                          "is_vasp": {
                            "type": "boolean"
                          },
                          "address": {
                            "type": "string"
                          },
                          "currency_id": {
                            "type": "string"
                          },
                          "extra_data": {
                            "type": "object",
                            "description": "will be returend based on the response from your Blockchain Analytics service provider if \\\"type\\\" is not SYGNA_VASP.",
                            "properties": {
                              "address": {
                                "type": "string"
                              },
                              "asset": {
                                "type": "string"
                              },
                              "blockchain_analytics_vendor": {
                                "type": "string"
                              },
                              "chainalysisIdentification": {
                                "nullable": true
                              },
                              "cluster": {
                                "nullable": true
                              },
                              "customAddress": {
                                "nullable": true
                              },
                              "rating": {
                                "type": "string"
                              }
                            }
                          },
                          "success": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/transactions/{id}": {
      "get": {
        "tags": [
          "Hub/transactions"
        ],
        "summary": "get specific transaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "transaction identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/schema.GetTransactionOutput"
                    }
                  }
                },
                "examples": {
                  "Natural Person involved": {
                    "value": {
                      "data": {
                        "id": "5f4f572e-d61c-4d13-854e-428c69xxxxx",
                        "created_at": "2023-05-23T08:20:29.000Z",
                        "updated_at": "2023-05-23T09:11:20.000Z",
                        "vasp_code": "XXXXXXXX",
                        "txid": "9562094852997456",
                        "transfer_id": "34c9cbd57b3db9887b9928ead5e5faf6b9177fd6e513890907fe11a92efxxxxx",
                        "direction": 0,
                        "value": "0.001",
                        "status": 6,
                        "status_text": "Confirmed",
                        "currency_id": "sygna:0x80000090",
                        "currency_symbol": "XRP",
                        "currency_name": "XRP",
                        "originator_info": {
                          "vasp_code": "XXXXXXXX",
                          "private_info": {
                            "account_numbers": [
                              "rBTwLga3i2gz3doX6Gva3MgEV8ZCDXXXXX"
                            ],
                            "originator_persons": [
                              {
                                "natural_person": {
                                  "country_of_residence": "JP",
                                  "customer_identification": "test001",
                                  "geographic_addresses": [
                                    {
                                      "address_line": [
                                        ""
                                      ],
                                      "address_type": "HOME",
                                      "country": "JP"
                                    }
                                  ],
                                  "name": {
                                    "name_identifiers": [
                                      {
                                        "name_identifier_type": "LEGL",
                                        "primary_identifier": "Sygna Test Customer"
                                      }
                                    ]
                                  },
                                  "national_identification": {
                                    "country_of_issue": "JP",
                                    "national_identifier": "test001",
                                    "national_identifier_type": "IDCD"
                                  }
                                }
                              }
                            ]
                          },
                          "customer": {
                            "id": "de320c8f-0831-4402-98bc-be0fb6bXXXXX",
                            "updated_at": "2023-05-23T08:19:06.000Z",
                            "vasp_code": "XXXXXXXX",
                            "customer_type": 0,
                            "customer_id": "test001",
                            "natural_person_name": {
                              "name": {
                                "last_name": "Sygna Test Customer"
                              }
                            },
                            "country": "JP",
                            "is_active": true,
                            "created_at": "2023-05-17T03:32:10.000Z",
                            "national": {
                              "country_of_issue": "JP",
                              "national_identifier": "test001",
                              "national_identifier_type": "IDCD"
                            },
                            "address": {
                              "address_line": [
                                ""
                              ],
                              "address_type": "HOME",
                              "country": "JP"
                            },
                            "labels": [],
                            "assets": [
                              {
                                "id": "de272e71-7965-40fe-9b77-1735b0fXXXXX",
                                "updated_at": "2023-05-23T08:19:06.000Z",
                                "currency_id": "sygna:0x80000090",
                                "address": "rBTwLga3i2gz3doX6Gva3MgEV8ZCDXXXXX",
                                "extra_info": {
                                  "tag": "123"
                                },
                                "risk_score_provider": "Merkle Science",
                                "labels": [],
                                "created_at": "2023-05-23T08:19:06.000Z"
                              }
                            ],
                            "assets_ignore_kyt": false
                          }
                        },
                        "beneficiary_info": {
                          "vasp_code": "XXXXXXXX",
                          "private_info": {
                            "account_numbers": [
                              "rUf7D9hNRFwSYwGwizXsBYUk4C65CXXXXX"
                            ],
                            "beneficiary_persons": [
                              {
                                "natural_person": {
                                  "name": {
                                    "name_identifiers": [
                                      {
                                        "name_identifier_type": "LEGL",
                                        "primary_identifier": "Bbb Aaa"
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          "address_matched": null,
                          "type_matched": null,
                          "name_matched": null,
                          "customer": null
                        },
                        "performed_at": "2023-05-23T08:20:29.000Z",
                        "performed_by": "XXXXX@XXXXX.com",
                        "expire_date": "2023-06-22T08:20:16.000Z",
                        "counter_party_vasp_info": {
                          "country": "TW",
                          "license_registration_id": "12345",
                          "regulatory_status": "12345",
                          "supervisory_authority": "Coolbitx",
                          "vasp_code": "XXXXXXXX",
                          "vasp_legal_name": "Reg_Test",
                          "vasp_sygna_registration_type": "Sygna_Hub"
                        },
                        "permission_status": 0,
                        "sanction_score": 0,
                        "sanction_search_id": [],
                        "sanction_screened_time": "2023-05-23T08:20:52.000Z",
                        "assets": [
                          {
                            "id": "47a0af0b-2af3-42cf-abcc-a6233e6XXXXX",
                            "updated_at": "2023-05-23T08:20:52.000Z",
                            "vasp_code": "XXXXXXXX",
                            "address": "rBTwLga3i2gz3doX6Gva3MgEV8ZCDXXXXX",
                            "extra_info": {
                              "tag": "123"
                            },
                            "labels": [],
                            "created_at": "2023-05-23T08:20:29.000Z",
                            "direction": 0
                          },
                          {
                            "id": "a375b8c5-c8e3-4986-b6bb-9799757XXXXX",
                            "updated_at": "2023-05-23T08:20:52.000Z",
                            "vasp_code": "XXXXXXXX",
                            "address": "rUf7D9hNRFwSYwGwizXsBYUk4C65CXXXXX",
                            "extra_info": {
                              "tag": "456"
                            },
                            "risk_score": "0",
                            "risk_score_provider": "Merkle Science",
                            "labels": [
                              "Exchange"
                            ],
                            "created_at": "2023-05-23T08:20:29.000Z",
                            "last_screened": "2023-05-23T08:20:48.000Z",
                            "direction": 1
                          }
                        ],
                        "protocol": "Sygna_Bridge",
                        "need_validate_address": true,
                        "sanction_score_provider": "Dow Jones",
                        "is_high_risk": false,
                        "forced_sending_when_VASP_is_not_healthy": null,
                        "data_transfer_remarks": "",
                        "customer": {
                          "id": "de320c8f-0831-4402-98bc-be0fb6bXXXXX",
                          "updated_at": "2023-05-23T08:20:33.000Z",
                          "vasp_code": "XXXXXXXX",
                          "customer_type": 0,
                          "customer_id": "test001",
                          "natural_person_name": {
                            "name": {
                              "last_name": "Sygna Test Customer"
                            }
                          },
                          "country": "JP",
                          "is_active": true,
                          "created_at": "2023-05-17T03:32:10.000Z",
                          "national": {
                            "country_of_issue": "JP",
                            "national_identifier": "test001",
                            "national_identifier_type": "IDCD"
                          },
                          "address": {
                            "address_line": [
                              ""
                            ],
                            "address_type": "HOME",
                            "country": "JP"
                          },
                          "labels": [],
                          "assets_ignore_kyt": false
                        },
                        "high_risk": false,
                        "value_usd": "0",
                        "max_risk_score": "0",
                        "risk_score_provider": "Merkle Science",
                        "sanction_report_link": null
                      }
                    }
                  },
                  "Legal Person involved": {
                    "value": {
                      "data": {
                        "id": "aff08c0d-1947-4bf4-a10c-80204be7494d",
                        "created_at": "2023-05-23T03:18:52.000Z",
                        "updated_at": "2023-05-23T03:21:29.000Z",
                        "vasp_code": "XXXXXXXX",
                        "txid": "840576829470598726",
                        "transfer_id": "8270b10dc17b6ed4df7bc97d0bcf8aa773c631915d62087ecebxxxxx246e8f1c",
                        "direction": 0,
                        "value": "0.001",
                        "status": 6,
                        "status_text": "Confirmed",
                        "currency_id": "sygna:0x80000090",
                        "currency_symbol": "XRP",
                        "currency_name": "XRP",
                        "originator_info": {
                          "vasp_code": "XXXXXXXX",
                          "private_info": {
                            "account_numbers": [
                              "rMAGnTv4eMWktZnhKa5cHxxxxx4ZiKUaQm"
                            ],
                            "originator_persons": [
                              {
                                "legal_person": {
                                  "country_of_registration": "TW",
                                  "customer_identification": "45645763456735678",
                                  "geographic_addresses": [
                                    {
                                      "address_line": [
                                        "jsthgsoauehrtgoaiehrg"
                                      ],
                                      "address_type": "BIZZ",
                                      "building_name": "Building name",
                                      "building_number": "dsdetnsn",
                                      "country": "AL",
                                      "country_sub_division": "rgqergweqbqeb",
                                      "department": "89578uik",
                                      "district_name": "45h245h",
                                      "floor": "Floor",
                                      "post_box": "dsdetnsn",
                                      "post_code": "dsdetnsn",
                                      "room": "Room Number 123",
                                      "street_name": "wefqrfgqerg",
                                      "sub_department": "dsdetnsn",
                                      "town_location_name": "dsdetnsn",
                                      "town_name": "Town name"
                                    }
                                  ],
                                  "name": {
                                    "local_name_identifiers": [
                                      {
                                        "legal_person_name": "Sheng　wun",
                                        "legal_person_name_identifier_type": "LEGL"
                                      }
                                    ],
                                    "name_identifiers": [
                                      {
                                        "legal_person_name": "KEVXX XXX",
                                        "legal_person_name_identifier_type": "LEGL"
                                      }
                                    ],
                                    "phonetic_name_identifiers": [
                                      {
                                        "legal_person_name": "凱文　sdolrg",
                                        "legal_person_name_identifier_type": "LEGL"
                                      }
                                    ]
                                  },
                                  "national_identification": {
                                    "country_of_issue": "AM",
                                    "national_identifier": "56356735673567",
                                    "national_identifier_type": "ARNU",
                                    "registration_authority": "3567356735673567"
                                  }
                                }
                              }
                            ]
                          },
                          "customer": {
                            "id": "440daa33-2720-4dd0-a849xxxxx383a699b",
                            "updated_at": "2023-05-22T09:30:36.000Z",
                            "vasp_code": "XXXXXXXX",
                            "customer_type": 1,
                            "customer_id": "4564xxxxx56735678",
                            "legal_person_name": {
                              "name": "KEVXX XXX",
                              "local_name": "Sheng　wun",
                              "phonetic_name": "凱文　sdolrg"
                            },
                            "country": "TW",
                            "is_active": true,
                            "created_at": "2023-05-15T02:30:44.000Z",
                            "national": {
                              "country_of_issue": "AM",
                              "national_identifier": "5xxxxx35673567",
                              "national_identifier_type": "ARNU",
                              "registration_authority": "3567356735673567"
                            },
                            "address": {
                              "address_line": [
                                "jsthgsoaxxxxxgoaiehrg"
                              ],
                              "address_type": "BIZZ",
                              "building_name": "Building name",
                              "building_number": "dsdetnsn",
                              "country": "AL",
                              "country_sub_division": "rgqergweqbqeb",
                              "department": "89578uik",
                              "district_name": "45h245h",
                              "floor": "Floor",
                              "post_box": "dsdetnsn",
                              "post_code": "dsdetnsn",
                              "room": "Room Number 123",
                              "street_name": "wefqrfgqerg",
                              "sub_department": "dsdetnsn",
                              "town_location_name": "dsdetnsn",
                              "town_name": "Town name"
                            },
                            "labels": [],
                            "assets": [
                              {
                                "id": "6fde3ca3-8824-4b88-8fe5xxxxx4d3735a2",
                                "updated_at": "2023-05-22T08:08:19.000Z",
                                "currency_id": "sygna:0x80000090",
                                "address": "rMAGnTv4eMWktZnhKa5cHxxxxx4ZiKUaQm",
                                "extra_info": {
                                  "tag": "1304"
                                },
                                "risk_score_provider": "Merkle Science",
                                "labels": [],
                                "created_at": "2023-05-22T08:08:19.000Z"
                              }
                            ],
                            "assets_ignore_kyt": false
                          }
                        },
                        "beneficiary_info": {
                          "vasp_code": "XXXXXXXX",
                          "private_info": {
                            "account_numbers": [
                              "r3AF4w8fSks3D3NNCjJTAxxxxxWQyKg9j5"
                            ],
                            "beneficiary_persons": [
                              {
                                "legal_person": {
                                  "name": {
                                    "name_identifiers": [
                                      {
                                        "legal_person_name": "KEVXX XXX",
                                        "legal_person_name_identifier_type": "LEGL"
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          },
                          "address_matched": null,
                          "type_matched": null,
                          "name_matched": null,
                          "customer": null
                        },
                        "performed_at": "2023-05-23T03:18:52.000Z",
                        "performed_by": "xxxxxexxxxxcoolbitx.com",
                        "expire_date": "2023-06-22T03:18:42.000Z",
                        "counter_party_vasp_info": {
                          "country": "TW",
                          "license_registration_id": "12345",
                          "regulatory_status": "12345",
                          "supervisory_authority": "Coolbitx",
                          "vasp_code": "XXXXXXXX",
                          "vasp_legal_name": "aaa",
                          "vasp_sygna_registration_type": "Sygna_Hub"
                        },
                        "permission_status": 0,
                        "sanction_score": 0,
                        "sanction_search_id": [],
                        "sanction_screened_time": "2023-05-23T03:19:30.000Z",
                        "assets": [
                          {
                            "id": "0657d22a-0612-4e35-81a1xxxxxdbb804d9",
                            "updated_at": "2023-05-23T03:19:30.000Z",
                            "vasp_code": "XXXXXXXX",
                            "address": "rMAGnTv4eMWktZnhKa5cHxxxxx4ZiKUaQm",
                            "extra_info": {
                              "tag": "1304"
                            },
                            "labels": [],
                            "created_at": "2023-05-23T03:18:52.000Z",
                            "direction": 0
                          },
                          {
                            "id": "fe427616-eba4-43e1-86c2xxxxx32411569",
                            "updated_at": "2023-05-23T03:19:30.000Z",
                            "vasp_code": "XXXXXXXX",
                            "address": "r3AF4w8fSks3D3NNCjJTAxxxxxWQyKg9j5",
                            "extra_info": {
                              "tag": "284568"
                            },
                            "risk_score": "0",
                            "risk_score_provider": "Merkle Science",
                            "labels": [
                              "Exchange"
                            ],
                            "created_at": "2023-05-23T03:18:52.000Z",
                            "last_screened": "2023-05-23T03:19:26.000Z",
                            "direction": 1
                          }
                        ],
                        "protocol": "Sygna_Bridge",
                        "need_validate_address": true,
                        "sanction_score_provider": "Dow Jones",
                        "is_high_risk": false,
                        "forced_sending_when_VASP_is_not_healthy": null,
                        "data_transfer_remarks": "",
                        "customer": {
                          "id": "440daa33-2720-4dd0-a849xxxxx383a699b",
                          "updated_at": "2023-05-23T03:18:57.000Z",
                          "vasp_code": "XXXXXXXX",
                          "customer_type": 1,
                          "customer_id": "45645763456735678",
                          "legal_person_name": {
                            "name": "KEVXX XXX",
                            "local_name": "Sheng　wun",
                            "phonetic_name": "凱文　sdolrg"
                          },
                          "country": "TW",
                          "is_active": true,
                          "created_at": "2023-05-15T02:30:44.000Z",
                          "national": {
                            "country_of_issue": "AM",
                            "national_identifier": "56356735673567",
                            "national_identifier_type": "ARNU",
                            "registration_authority": "3567356735673567"
                          },
                          "address": {
                            "address_line": [
                              "jsthgsoaxxxxxgoaiehrg"
                            ],
                            "address_type": "BIZZ",
                            "building_name": "Building name",
                            "building_number": "dsdetnsn",
                            "country": "AL",
                            "country_sub_division": "rgqergweqbqeb",
                            "department": "89578uik",
                            "district_name": "45h245h",
                            "floor": "Floor",
                            "post_box": "dsdetnsn",
                            "post_code": "dsdetnsn",
                            "room": "Room Number 123",
                            "street_name": "wefqrfgqerg",
                            "sub_department": "dsdetnsn",
                            "town_location_name": "dsdetnsn",
                            "town_name": "Town name"
                          },
                          "labels": [],
                          "assets_ignore_kyt": false
                        },
                        "high_risk": false,
                        "value_usd": "0",
                        "max_risk_score": "0",
                        "risk_score_provider": "Merkle Science",
                        "sanction_report_link": null
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Hub/users"
        ],
        "summary": "get all users",
        "description": "only admin could use this method",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "filter users by identifier",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "role_id",
            "in": "query",
            "description": "filter users by role identifier(0:admin 1:member)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "account",
            "in": "query",
            "description": "filter users by login account",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "login_type",
            "in": "query",
            "description": "filter users by login type(only supported password and google now)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "password",
                  "google"
                ]
              }
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "filter users by if status is activated",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "boolean"
              }
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "description": "filter data by a range of created data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Specifies sequences to sort data (ie.orderby=id:desc)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "updated_at",
            "in": "query",
            "description": "filter data by a range of updated data(ie. '2021-01-01T00:00:00.000Z,2021-01-02T23:59:59.999Z' means an range between 2021-01-01T00:00:00.000Z and 2021-01-02T23:59:59.999Z inclusive)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/model.User"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/schema.RespWithPaging"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      },
      "post": {
        "tags": [
          "Hub/users"
        ],
        "summary": "create users",
        "description": "only admin could use this method",
        "requestBody": {
          "description": "post /users params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PostUsersInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "account": "user@example.com"
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      },
      "delete": {
        "tags": [
          "Hub/users"
        ],
        "summary": "delete users(member)",
        "description": "only admin could use this method\nall accounts would be logout if admin deleted them",
        "requestBody": {
          "description": "patch /users params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.DeleteUsersInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      },
      "patch": {
        "tags": [
          "Hub/users"
        ],
        "summary": "activate or deactivate users(member)",
        "description": "only admin could use this method\nall accounts would be logout if admin deactivated them",
        "requestBody": {
          "description": "patch /users params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PatchUsersInput"
                }
              },
              "examples": {
                "Example 1": {
                  "value": [
                    {
                      "id": "781fe1f1-4f1e-446e-b707-f914048b972e",
                      "is_active": false
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithMutation"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/users/change-password": {
      "patch": {
        "tags": [
          "Hub/users"
        ],
        "summary": "change login password",
        "description": "admin or member only could change self password\nall accounts would be logout if one of users changed password\nuser must use password to login if he want to change his password",
        "requestBody": {
          "description": "patch /users/change-password params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/schema.ChangePasswordInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithStatusAndMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/users/link": {
      "post": {
        "tags": [
          "Hub/users"
        ],
        "summary": "link your account to third party service",
        "description": "admin or member could only link self account",
        "requestBody": {
          "description": "post /users/link params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/schema.PostUsersLinkInput"
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "account": "string",
                    "credential": "string",
                    "login_type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithStatusAndMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/users/link/{login_type}": {
      "delete": {
        "tags": [
          "Hub/users"
        ],
        "summary": "unlink your account from third party service",
        "description": "admin or member could only unlink self account\nall accounts which linked with specific third party service would be logout if one of users unlinked",
        "parameters": [
          {
            "name": "login_type",
            "in": "path",
            "description": "login type which you want to unlink",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/schema.RespWithStatusAndMessage"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Hub/users"
        ],
        "summary": "get specific or self user data",
        "description": "admin could get specific or self user data\nmember could only get self user data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "specific user identifier or 'self' to get self user data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/model.User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/users/history": {
      "get": {
        "tags": [
          "Hub/users"
        ],
        "summary": "get users audit history",
        "description": "get users audit history",
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "last_user_email",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ref_user_email",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "created_at",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/model.User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/vendors/bridge/sync": {
      "get": {
        "tags": [
          "Hub/vendors"
        ],
        "summary": "Synchronize Sygna Bridge Transactions",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/vendors/shyft/attestations/sync": {
      "get": {
        "tags": [
          "Hub/vendors"
        ],
        "summary": "Synchronize Shyft Attestations",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/vendors/test": {
      "post": {
        "tags": [
          "Hub/vendors"
        ],
        "summary": "test if third-party service is available",
        "description": "only allow admin to use this method. To know all the supported 3rd party vendors, please check the response of GET `/services/supported`",
        "requestBody": {
          "description": "post /vendors/test params",
          "required": true,
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/schema.PostVendorsTestInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/schema.PostVendorsTestOutput"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/webhook-log": {
      "get": {
        "tags": [
          "Hub/webhook-log"
        ],
        "summary": "get all webhook logs",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "filter log by webhook event id",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "filter log by webhook event status",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transaction_uuid",
            "in": "query",
            "description": "filter log by transaction uuid",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "counterparty_vasp_code",
            "in": "query",
            "description": "filter log by counterparty vasp code",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "protocol",
            "in": "query",
            "description": "filter log by transaction protocol",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "A URL parameter that specifies the maximum number of records to return. This can be any positive integer between 1 and 1000 inclusive. If not specified, the default is 20.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Specifies an offset that allows you to retrieve the next batch of records.Any positive integer.If not specified, the default is 0.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Specifies sequences to sort data (ie.orderby=id:desc)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/model.WebhookEvent"
                          }
                        }
                      }
                    },
                    {
                      "$ref": "#/components/schemas/schema.RespWithPaging"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/webhook-log/sync": {
      "get": {
        "tags": [
          "Hub/webhook-log"
        ],
        "summary": "resend failed webhook event",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "resend specified webhook event",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/global-vasp-export": {
      "get": {
        "tags": [
          "Hub/global-vasp-export"
        ],
        "summary": "generate global-vasp report",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/global-vasp-export/status": {
      "get": {
        "tags": [
          "Hub/global-vasp-export"
        ],
        "summary": "get global-vasp report processing status",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/model.Report"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    },
    "/global-vasp-export/download": {
      "get": {
        "tags": [
          "Hub/global-vasp-export"
        ],
        "summary": "download global-vasp report",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/errors.SystemError"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerToken": []
          }
        ],
        "servers": [
          {
            "url": "httsp://example.com/v1",
            "description": ""
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerToken": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "schema.GetRootOutput": {
        "type": "object",
        "properties": {
          "gorm_version": {
            "type": "string"
          },
          "rollback_id": {
            "type": "string"
          },
          "sql_version": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "errors.SystemError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "extra_data": {
            "type": "object"
          },
          "help": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "stack": {
            "type": "object"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "model.Currency": {
        "type": "object",
        "properties": {
          "addr_extra_info": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "created_at": {
            "type": "string"
          },
          "currency_id": {
            "type": "string"
          },
          "currency_name": {
            "type": "string"
          },
          "currency_symbol": {
            "type": "string"
          },
          "token_address": {
            "type": "string"
          }
        }
      },
      "schema.RespWithPaging": {
        "type": "object",
        "properties": {
          "paging": {
            "$ref": "#/components/schemas/schema.PagingResult"
          }
        }
      },
      "schema.PagingResult": {
        "type": "object"
      },
      "schema.GetCustomersOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Target asset identifier which you want to accept",
            "format": "uuid"
          }
        },
        "required": [
          "id"
        ]
      },
      "schema.PutCustomersInput": {
        "type": "object",
        "properties": {
          "localNameIdentifier": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ivms101.LocalNaturalPersonNameIdentifier"
            }
          },
          "nameIdentifier": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ivms101.NaturalPersonNameIdentifier"
            }
          },
          "phoneticNameIdentifier": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ivms101.PhoneticNaturalPersonNameIdentifier"
            }
          }
        }
      },
      "ivms101.LocalNaturalPersonNameIdentifier": {
        "type": "object",
        "properties": {
          "nameIdentifierType": {
            "type": "string",
            "format": "uuid"
          },
          "is_active": {
            "type": "boolean"
          },
          "legal_person_name": {
            "$ref": "#/components/schemas/model.LegalPersonName"
          },
          "national": {
            "$ref": "#/components/schemas/schema.NationalIdentification"
          },
          "natural_person_name": {
            "$ref": "#/components/schemas/model.NaturalPersonName"
          }
        }
      },
      "model.LegalPersonName": {
        "type": "object",
        "title": "LegalPersonName",
        "description": "required if customer type equals 1",
        "properties": {
          "local_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phonetic_name": {
            "type": "string"
          }
        }
      },
      "schema.NationalIdentification": {
        "type": "object",
        "title": "PostTransactionSygnaBridge",
        "description": "This schema is for 'Sygna_Bridge' protocol",
        "properties": {
          "beneficiary": {
            "type": "object",
            "properties": {
              "addrs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/model.Addr"
                }
              },
              "customer_type": {
                "type": "integer",
                "description": "Customer Type\nRequired if \n- protocol equals Sygna_Bridge \n* 0 - NaturalPerson\n* 1 - LegalPerson"
              },
              "private_info": {
                "$ref": "#/components/schemas/model.BeneficiaryPrivateInfo"
              },
              "vasp_code": {
                "type": "string"
              }
            },
            "required": [
              "addrs",
              "customer_type",
              "private_info",
              "vasp_code"
            ]
          },
          "currency_id": {
            "type": "string",
            "description": "Choose target currency identifier from GET /currencies"
          },
          "customer_id": {
            "type": "string",
            "description": "Choose target identifier from GET /customers"
          },
          "expire_date": {
            "type": "integer",
            "description": "The value must be in Epoch & Unix Timestamp format, excluding milliseconds."
          },
          "forced_sending_when_VASP_is_not_healthy": {
            "type": "boolean",
            "description": "1. \nTrue: Forced sending data transfers even counterparty VASP server status is NOT healthy.\nThe data transfer will still be successfully sent out by oVASP to the Sygna server.\n\nFalse: Do not force sending data transfers when the counterparty VASP server status is NOT healthy.\nThe data transfer will not be sent out. The oVASP needs to resend the data transfer manually.\n  \n2. Please hit Sygna Hub API <POST /settings>, to set the “forced_sending_when_VASP_is_not_healthy” parameter to be True or False by default in every data transfer.\n\n3. When there’s an error related to VASP server error, a new webhook event “SEND_COUNTERPARTY_SERVER_NOT_HEALTHY_ERROR” will be triggered if you’ve input the webhook URL in your Sygna Hub config file."
          },
          "need_validate_address": {
            "type": "boolean"
          },
          "originator": {
            "$ref": "#/components/schemas/OriginatorAsset"
          },
          "protocol": {
            "enum": [
              "Sygna_Bridge",
              null
            ]
          },
          "value": {
            "type": "string"
          }
        }
      },
      "model.Addr": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "extra_info": {
            "type": "object"
          }
        },
        "required": [
          "address"
        ]
      },
      "model.BeneficiaryPrivateInfo": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/model.NaturalPersonName"
          },
          {
            "$ref": "#/components/schemas/model.LegalPersonName"
          }
        ]
      },
      "model.NaturalPersonName": {
        "type": "object",
        "title": "NaturalPersonName",
        "description": "required if customer type equals 0",
        "properties": {
          "local_name": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phonetic_name": {
            "$ref": "#/components/schemas/model.NameObject"
          }
        },
        "required": [
          "name"
        ]
      },
      "model.NameObject": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          }
        }
      },
      "OriginatorAsset": {
        "type": "object",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "addrs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/model.Addr"
                }
              }
            },
            "required": [
              "addrs"
            ]
          },
          {
            "type": "object",
            "properties": {
              "assets": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "assets"
            ]
          }
        ]
      },
      "ivms101.NaturalPersonNameIdentifier": {
        "type": "object",
        "properties": {
          "nameIdentifierType": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "customer_type": {
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "legal_person_name": {
            "$ref": "#/components/schemas/schema.LegalPersonName"
          },
          "national": {
            "$ref": "#/components/schemas/model.National"
          },
          "natural_person_name": {
            "$ref": "#/components/schemas/schema.NaturalPersonName"
          },
          "update_status": {
            "type": "boolean"
          }
        },
        "required": [
          "id"
        ]
      },
      "schema.LegalPersonName": {
        "type": "object",
        "title": "PostTransactionUnknown",
        "description": "required if customer_type equals 1",
        "properties": {
          "beneficiary": {
            "type": "object",
            "properties": {
              "addrs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/model.Addr"
                }
              },
              "customer_type": {
                "type": "integer",
                "description": "Customer Type\n* 0 - NaturalPerson\n* 1 - LegalPerson"
              },
              "private_info": {
                "$ref": "#/components/schemas/model.BeneficiaryPrivateInfo"
              },
              "vasp_code": {
                "type": "string"
              }
            }
          },
          "currency_id": {
            "type": "string",
            "description": "Choose target currency identifier from GET /currencies"
          },
          "customer_id": {
            "type": "string",
            "description": "Choose target identifier from GET /customers"
          },
          "expire_date": {
            "type": "integer"
          },
          "forced_sending_when_VASP_is_not_healthy": {
            "type": "boolean"
          },
          "need_validate_address": {
            "type": "boolean"
          },
          "originator": {
            "$ref": "#/components/schemas/OriginatorAsset"
          },
          "protocol_extra_info": {
            "type": "object"
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "model.National": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/schema.Address"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema.PatchAssetInput"
            }
          },
          "assets_ignore_kyt": {
            "type": "boolean"
          },
          "birth": {
            "$ref": "#/components/schemas/schema.DateAndPlaceOfBirth"
          },
          "country": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "customer_type": {
            "type": "integer",
            "description": "Customer Type\n* 0 - NaturalPerson\n* 1 - LegalPerson"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "schema.Address": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "currency_id": {
            "type": "string"
          },
          "currency_name": {
            "type": "string"
          },
          "currency_symbol": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "last_screened": {
            "type": "string"
          },
          "reject_code": {
            "type": "string"
          },
          "reject_message": {
            "type": "string"
          },
          "risk_score": {
            "type": "string"
          },
          "risk_score_provider": {
            "type": "string"
          },
          "txid": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "validation_status": {
            "type": "integer"
          },
          "validation_status_text": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "schema.PatchAssetInput": {
        "type": "object"
      },
      "schema.DateAndPlaceOfBirth": {
        "type": "object",
        "properties": {
          "date_of_birth": {
            "type": "string"
          },
          "vasp_beneficiary_wallet_address": {
            "type": "string"
          }
        }
      },
      "schema.NaturalPersonName": {
        "type": "object",
        "description": "required if customer_type equals 0",
        "properties": {
          "local_name": {
            "$ref": "#/components/schemas/schema.NameObject"
          },
          "name": {
            "$ref": "#/components/schemas/schema.NameObject"
          },
          "phonetic_name": {
            "$ref": "#/components/schemas/schema.NameObject"
          }
        }
      },
      "schema.NameObject": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          }
        }
      },
      "ivms101.PhoneticNaturalPersonNameIdentifier": {
        "type": "object",
        "properties": {
          "nameIdentifierType": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "country_sub_division": {
            "type": "string"
          }
        }
      },
      "schema.RespWithMutation": {
        "type": "object",
        "properties": {
          "account_numbers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "error": {
                  "$ref": "#/components/schemas/errors.SystemError"
                },
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "success": {
                  "type": "boolean"
                }
              },
              "required": [
                "success"
              ]
            }
          }
        }
      },
      "schema.PostCustomersInput": {
        "type": "object"
      },
      "schema.PatchCustomersInput": {
        "type": "object"
      },
      "model.Report": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Target asset identifier which you want to accept",
            "format": "uuid"
          },
          "txid": {
            "type": "string"
          }
        }
      },
      "GET-customers_id_natural-person": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "vasp_code": {
                "type": "string"
              },
              "customer_type": {
                "type": "integer"
              },
              "customer_id": {
                "type": "string"
              },
              "natural_person_name": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      }
                    }
                  },
                  "local_name": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      }
                    }
                  },
                  "phonetic_name": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "country": {
                "type": "string"
              },
              "is_active": {
                "type": "boolean"
              },
              "created_at": {
                "type": "string"
              },
              "national": {
                "type": "object",
                "properties": {
                  "country_of_issue": {
                    "type": "string"
                  },
                  "national_identifier": {
                    "type": "string"
                  },
                  "national_identifier_type": {
                    "type": "string"
                  },
                  "registration_authority": {
                    "type": "string"
                  }
                }
              },
              "address": {
                "type": "object",
                "properties": {
                  "address_line": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "address_type": {
                    "type": "string"
                  },
                  "building_name": {
                    "type": "string"
                  },
                  "building_number": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "country_sub_division": {
                    "type": "string"
                  },
                  "department": {
                    "type": "string"
                  },
                  "district_name": {
                    "type": "string"
                  },
                  "floor": {
                    "type": "string"
                  },
                  "post_box": {
                    "type": "string"
                  },
                  "post_code": {
                    "type": "string"
                  },
                  "room": {
                    "type": "string"
                  },
                  "street_name": {
                    "type": "string"
                  },
                  "sub_department": {
                    "type": "string"
                  },
                  "town_location_name": {
                    "type": "string"
                  },
                  "town_name": {
                    "type": "string"
                  }
                }
              },
              "labels": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "assets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "currency_id": {
                      "type": "string"
                    },
                    "currency_symbol": {
                      "type": "string"
                    },
                    "currency_name": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "risk_score_provider": {
                      "type": "string"
                    },
                    "labels": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "last_screened": {
                      "type": "string"
                    },
                    "is_sygna_supported": {
                      "type": "boolean"
                    },
                    "is_kyt_supported": {
                      "type": "boolean"
                    },
                    "extra_info": {
                      "type": "object",
                      "properties": {
                        "Tag": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "assets_ignore_kyt": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "GET-customers_id_legal-person": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "vasp_code": {
                "type": "string"
              },
              "customer_type": {
                "type": "integer"
              },
              "customer_id": {
                "type": "string"
              },
              "natural_person_name": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      }
                    }
                  },
                  "local_name": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      }
                    }
                  },
                  "phonetic_name": {
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "type": "string"
                      },
                      "last_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "country": {
                "type": "string"
              },
              "is_active": {
                "type": "boolean"
              },
              "created_at": {
                "type": "string"
              },
              "national": {
                "type": "object",
                "properties": {
                  "country_of_issue": {
                    "type": "string"
                  },
                  "national_identifier": {
                    "type": "string"
                  },
                  "national_identifier_type": {
                    "type": "string"
                  },
                  "registration_authority": {
                    "type": "string"
                  }
                }
              },
              "address": {
                "type": "object",
                "properties": {
                  "address_line": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "address_type": {
                    "type": "string"
                  },
                  "building_name": {
                    "type": "string"
                  },
                  "building_number": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "country_sub_division": {
                    "type": "string"
                  },
                  "department": {
                    "type": "string"
                  },
                  "district_name": {
                    "type": "string"
                  },
                  "floor": {
                    "type": "string"
                  },
                  "post_box": {
                    "type": "string"
                  },
                  "post_code": {
                    "type": "string"
                  },
                  "room": {
                    "type": "string"
                  },
                  "street_name": {
                    "type": "string"
                  },
                  "sub_department": {
                    "type": "string"
                  },
                  "town_location_name": {
                    "type": "string"
                  },
                  "town_name": {
                    "type": "string"
                  }
                }
              },
              "labels": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "assets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "currency_id": {
                      "type": "string"
                    },
                    "currency_symbol": {
                      "type": "string"
                    },
                    "currency_name": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "risk_score_provider": {
                      "type": "string"
                    },
                    "labels": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "last_screened": {
                      "type": "string"
                    },
                    "is_sygna_supported": {
                      "type": "boolean"
                    },
                    "is_kyt_supported": {
                      "type": "boolean"
                    },
                    "extra_info": {
                      "type": "object",
                      "properties": {
                        "Tag": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "assets_ignore_kyt": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "schema.PostOauthInput": {
        "type": "object",
        "properties": {
          "account_numbers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "beneficiary_persons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ivms101.Person"
            }
          }
        }
      },
      "ivms101.Person": {
        "type": "object",
        "properties": {
          "legalPerson": {
            "$ref": "#/components/schemas/ivms101.LegalPerson"
          },
          "naturalPerson": {
            "$ref": "#/components/schemas/ivms101.NaturalPerson"
          }
        }
      },
      "ivms101.LegalPerson": {
        "type": "object",
        "properties": {
          "countryOfRegistration": {
            "type": "string"
          },
          "customerIdentification": {
            "enum": [
              "password",
              "google"
            ],
            "default": "password"
          }
        }
      },
      "ivms101.NaturalPerson": {
        "type": "object",
        "properties": {
          "country_of_residence": {
            "type": "string"
          },
          "extra_info": {
            "type": "object"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "schema.RespWithStatus": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "success": {
                "type": "boolean"
              },
              "accessToken": {
                "type": "string"
              }
            },
            "required": [
              "success"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "model.Ownership": {
        "type": "object",
        "properties": {
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.OwnershipAsset"
            }
          },
          "created_at": {
            "type": "string"
          },
          "post_box": {
            "type": "string"
          },
          "post_code": {
            "type": "string"
          },
          "room": {
            "type": "string"
          },
          "street_name": {
            "type": "string"
          },
          "sub_department": {
            "type": "string"
          }
        }
      },
      "model.OwnershipAsset": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "currency_id": {
            "type": "string"
          },
          "currency_name": {
            "type": "string"
          },
          "currency_symbol": {
            "type": "string"
          },
          "extra_info": {
            "$ref": "#/components/schemas/model.StringObject"
          },
          "id": {
            "type": "string"
          },
          "is_kyt_supported": {
            "type": "boolean"
          },
          "is_sygna_supported": {
            "type": "boolean"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "last_screened": {
            "type": "string"
          },
          "risk_score": {
            "type": "string"
          },
          "risk_score_provider": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "model.StringObject": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "schema.PostOwnershipInput": {
        "type": "object"
      },
      "schema.PatchOwnershipIdInput": {
        "type": "object"
      },
      "schema.PatchOwnershipConfirmInput": {
        "type": "object"
      },
      "schema.PatchOwnershipValidationInput": {
        "type": "object",
        "properties": {
          "profile_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "score": {
            "type": "integer"
          }
        }
      },
      "model.Rollback": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/schema.Address"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema.Asset"
            }
          },
          "avg_risk_score": {
            "type": "string"
          },
          "birth": {
            "$ref": "#/components/schemas/schema.DateAndPlaceOfBirth"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "schema.Asset": {
        "type": "object",
        "properties": {
          "assets_ignore_kyt": {
            "type": "boolean"
          },
          "owner_email": {
            "type": "string",
            "format": "email"
          },
          "private_wallet_address": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sender_email": {
            "type": "string"
          }
        }
      },
      "schema.PutRollbackInout": {
        "type": "object",
        "properties": {
          "nameIdentifierType": {
            "type": "string"
          }
        }
      },
      "model.Service": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string"
          },
          "credential": {
            "type": "object",
            "description": "this field is plain text"
          },
          "end_time": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "provider": {
            "type": "string"
          },
          "settings": {
            "type": "object"
          },
          "start_time": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "vasp_code": {
            "type": "string"
          }
        }
      },
      "schema.PutServicesInput": {
        "type": "object"
      },
      "schema.PostServicesInput": {
        "type": "object",
        "title": "LegalPersonName",
        "properties": {
          "legalPersonName": {
            "type": "string"
          },
          "legalPersonNameIdentifierType": {
            "enum": [
              "Blockchain Analytics",
              "Sanction Screening",
              "Travel Rule"
            ]
          }
        }
      },
      "model.Setting": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "rule": {
            "type": "object"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "vasp_code": {
            "type": "string"
          },
          "value_usd": {
            "type": "string",
            "example": "(Auto-accept setting off) There is a new data transfer that hasn’t been checked by the validation rules. ; Beneficiary Identity Check is not applicable."
          }
        }
      },
      "schema.PostSettingInput": {
        "type": "object",
        "properties": {
          "legalPersonName": {
            "enum": [
              "personal_info_checking_items",
              "automation_settings",
              "sanction_screening_timing",
              "forced_sending_when_VASP_is_not_healthy",
              "blockchain_analytics_timing"
            ]
          }
        }
      },
      "schema.GetTransactionsOutput": {
        "type": "object",
        "title": "PostTransactionUnknown",
        "description": "This schema is for 'Unknown' protocol",
        "properties": {
          "beneficiary": {
            "type": "object",
            "properties": {
              "addrs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/model.Addr"
                }
              },
              "customer_type": {
                "type": "integer",
                "description": "Customer Type\n* 0 - NaturalPerson\n* 1 - LegalPerson"
              },
              "private_info": {
                "$ref": "#/components/schemas/model.BeneficiaryPrivateInfo"
              },
              "vasp_code": {
                "type": "string"
              }
            }
          },
          "currency_id": {
            "type": "string",
            "description": "Choose target currency identifier from GET /currencies"
          },
          "customer_id": {
            "type": "string",
            "description": "Choose target identifier from GET /customers"
          },
          "expire_date": {
            "type": "integer"
          },
          "forced_sending_when_VASP_is_not_healthy": {
            "type": "boolean"
          },
          "need_validate_address": {
            "type": "boolean"
          },
          "originator": {
            "$ref": "#/components/schemas/OriginatorAsset"
          },
          "protocol_extra_info": {
            "type": "object"
          },
          "txid": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "value_usd": {
            "type": "string",
            "description": "only used in response"
          }
        }
      },
      "PostTransactionUnknown": {
        "type": "object",
        "title": "PostTransactionUnknown",
        "properties": {
          "account": {
            "type": "string",
            "description": "account should be valid email address"
          },
          "email_pw_to_user": {
            "type": "boolean",
            "description": "email_pw_to_user is optional and its default value is true."
          },
          "password": {
            "type": "string",
            "description": "password is optional and it is generated if password is empty.\npassword must be follow below rules:\nat least 6 letters\nat least 1 number\nat least 1 upper case\nat least 1 special character"
          },
          "role_id": {
            "type": "integer",
            "description": "role_id\n* 0 - admin\n* 1 - member\nrole_id is optional and its default value is 1(member).\nnotice: admin could not be created if there is admin in VASP."
          }
        }
      },
      "PostTransactionSygnaBridge": {
        "type": "object",
        "title": "LegalPersonName",
        "properties": {
          "account": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "last_login": {
            "type": "string"
          },
          "last_password_change": {
            "type": "string"
          }
        }
      },
      "PostTransactionSygnaEmail": {
        "type": "object",
        "title": "PostTransactionSygnaEmail",
        "properties": {
          "id": {
            "type": "string",
            "description": "specific user identifier"
          }
        },
        "required": [
          "id"
        ]
      },
      "PostTransactionTRISA": {
        "type": "object",
        "title": "PostTransactionTRISA",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "something"
              },
              "success": {
                "type": "boolean"
              }
            },
            "required": [
              "message",
              "success"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "PostTransactionShyft": {
        "type": "object",
        "title": "PostTransactionShyft",
        "properties": {
          "created_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "payload": {
            "type": "object"
          },
          "transaction_uuid": {
            "type": "string"
          }
        }
      },
      "model.PostEmailProtocolDepositInput": {
        "type": "object",
        "title": "PostTransactionSygnaEmail",
        "description": "This schema is for 'Sygna_EmailProtocol' protocol",
        "properties": {
          "beneficiary": {
            "type": "object",
            "properties": {
              "addrs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/model.Addr"
                }
              },
              "assets": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "currency_id": {
            "type": "string"
          },
          "customer_id": {
            "type": "string",
            "description": "Transaction identifier on blockchain"
          }
        }
      },
      "schema.PatchPermissionInput": {
        "type": "object"
      },
      "schema.PostEmailProtocolPermissionInput": {
        "type": "object",
        "properties": {
          "action": {
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "vasp_code": {
            "type": "string",
            "description": "Only required when the permission_status is REJECTED and reject_code is 'BVRC999', reply with [BVRC](ref:beneficiary-vasp-rejected-code)."
          }
        },
        "required": [
          "id"
        ]
      },
      "schema.PatchTxIdInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "txid": {
            "type": "string",
            "description": "Transaction identifier on blockchain"
          }
        }
      },
      "schema.PostSanctionMatchInput": {
        "type": "object",
        "properties": {
          "customer_type": {
            "type": "integer"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "customer_type"
        ]
      },
      "sanctionscreening.GetSanctionScoreOutput": {
        "type": "object",
        "properties": {
          "profile_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "score": {
            "type": "integer"
          }
        }
      },
      "schema.PatchTransactionsStatus": {
        "type": "object",
        "properties": {
          "action": {
            "type": "integer"
          },
          "status_text": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "schema.PostWalletAddressFilterInput": {
        "type": "object",
        "properties": {
          "address_line": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "address_type": {
            "type": "string",
            "description": "choose target currency identifier from GET /currencies"
          },
          "elliptic_holistic_wallet_analysis": {
            "type": "boolean",
            "description": "Support Elliptic Holistic Screening.\nVASPs must opt-in for Elliptic Holistic searching to avoid errors.",
            "default": false
          }
        }
      },
      "schema.GetTransactionOutput": {
        "type": "object",
        "properties": {
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/schema.TransactionAsset"
            }
          },
          "beneficiary_info": {
            "$ref": "#/components/schemas/model.BeneficiaryInfo"
          },
          "counter_party_vasp_info": {
            "$ref": "#/components/schemas/model.StringObject"
          },
          "created_at": {
            "type": "string"
          },
          "currency_id": {
            "type": "string"
          },
          "currency_name": {
            "type": "string"
          },
          "currency_symbol": {
            "type": "string"
          },
          "customer": {
            "$ref": "#/components/schemas/model.Customer"
          },
          "direction": {
            "type": "integer",
            "description": "- 0 withdrawal\r\n- 1 deposit"
          },
          "error": {
            "$ref": "#/components/schemas/model.Object"
          },
          "expire_date": {
            "type": "string"
          },
          "forced_sending_when_VASP_is_not_healthy": {
            "type": "boolean"
          },
          "high_risk": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          },
          "is_high_risk": {
            "type": "boolean"
          },
          "max_risk_score": {
            "type": "string"
          },
          "need_validate_address": {
            "type": "boolean"
          },
          "originator_info": {
            "$ref": "#/components/schemas/model.OriginatorInfo"
          },
          "performed_at": {
            "type": "string"
          },
          "performed_by": {
            "type": "string"
          },
          "permission_status": {
            "type": "integer",
            "description": "Status of the transfer permission, 0 for accept, 1 for reject"
          },
          "protocol": {
            "type": "string"
          },
          "protocol_extra_info": {
            "$ref": "#/components/schemas/model.Object"
          },
          "reject_code": {
            "type": "string"
          },
          "reject_message": {
            "type": "string",
            "description": "Only required when the permission_status is REJECTED and reject_code is 'BVRC999', reply with [BVRC](ref:beneficiary-vasp-rejected-code)."
          }
        }
      },
      "schema.TransactionAsset": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "logins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.Login"
            }
          },
          "role_id": {
            "type": "integer"
          },
          "updated_at": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "model.Login": {
        "type": "object",
        "title": "NaturalPersonName",
        "description": "required if customer type equals 0",
        "properties": {
          "local_name": {
            "$ref": "#/components/schemas/model.NameObject"
          },
          "name": {
            "$ref": "#/components/schemas/model.NameObject"
          },
          "phonetic_name": {
            "$ref": "#/components/schemas/model.NameObject"
          }
        },
        "required": [
          "name"
        ]
      },
      "model.BeneficiaryInfo": {
        "type": "object",
        "properties": {
          "address_matched": {
            "type": "boolean"
          },
          "customer": {
            "$ref": "#/components/schemas/model.Customer"
          },
          "name_matched": {
            "type": "boolean"
          },
          "private_info": {
            "$ref": "#/components/schemas/ivms101.Beneficiary"
          },
          "type_matched": {
            "type": "boolean"
          },
          "vasp_code": {
            "type": "string"
          }
        }
      },
      "model.Customer": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/model.Address"
          },
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.Asset"
            }
          },
          "assets_ignore_kyt": {
            "type": "boolean"
          },
          "avg_risk_score": {
            "type": "string"
          },
          "birth": {
            "$ref": "#/components/schemas/model.Birth"
          },
          "country": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "customer_id": {
            "type": "string"
          },
          "customer_type": {
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "last_screened": {
            "type": "string"
          },
          "legal_person_name": {
            "$ref": "#/components/schemas/model.LegalPersonName"
          },
          "max_risk_score": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "national": {
            "$ref": "#/components/schemas/model.National"
          },
          "natural_person_name": {
            "$ref": "#/components/schemas/model.NaturalPersonName"
          }
        }
      },
      "model.Address": {
        "type": "object"
      },
      "model.Asset": {
        "type": "object"
      },
      "model.Birth": {
        "type": "object",
        "properties": {
          "date_of_birth": {
            "type": "string"
          },
          "place_of_birth": {
            "type": "string"
          }
        }
      },
      "ivms101.Beneficiary": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "currency_id": {
            "type": "string"
          },
          "extra_info": {
            "type": "object"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "model.Object": {
        "type": "object"
      },
      "model.OriginatorInfo": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "currency_id": {
            "type": "string"
          },
          "currency_name": {
            "type": "string"
          },
          "currency_symbol": {
            "type": "string"
          },
          "extra_info": {
            "$ref": "#/components/schemas/model.StringObject"
          },
          "id": {
            "type": "string"
          },
          "is_kyt_supported": {
            "type": "boolean"
          },
          "is_sygna_supported": {
            "type": "boolean"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "last_screened": {
            "type": "string"
          },
          "risk_score": {
            "type": "string"
          },
          "risk_score_provider": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/decimal.NullDecimal"
          },
          "value_usd": {
            "$ref": "#/components/schemas/decimal.NullDecimal"
          }
        }
      },
      "decimal.NullDecimal": {
        "type": "object",
        "properties": {
          "decimal": {
            "type": "number"
          },
          "valid": {
            "type": "boolean"
          }
        }
      },
      "model.User": {
        "type": "object",
        "properties": {
          "currency_id": {
            "type": "string"
          },
          "buildingNumber": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "schema.PostUsersInput": {
        "type": "object",
        "properties": {
          "legalPersonName": {
            "type": "string"
          },
          "legalPersonNameIdentifierType": {
            "type": "string",
            "description": "password is optional and it is generated if password is empty.\npassword must be follow below rules:\nat least 6 letters\nat least 1 number\nat least 1 upper case\nat least 1 special character"
          },
          "role_id": {
            "type": "integer",
            "description": "role_id\n* 0 - admin\n* 1 - member\nrole_id is optional and its default value is 1(member).\nnotice: admin could not be created if there is admin in VASP."
          }
        }
      },
      "schema.DeleteUsersInput": {
        "type": "object",
        "properties": {
          "countryOfIssue": {
            "type": "string"
          },
          "nationalIdentifier": {
            "type": "string",
            "description": "third party service name\nonly google is supported now"
          }
        }
      },
      "schema.PatchUsersInput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "specific user identifier"
          },
          "is_active": {
            "type": "boolean"
          },
          "role_id": {
            "type": "integer"
          }
        },
        "required": [
          "id"
        ]
      },
      "schema.ChangePasswordInput": {
        "type": "object",
        "properties": {
          "new_password": {
            "type": "string",
            "description": "new password must be follow below rules:\nat least 6 letters\nat least 1 number\nat least 1 upper case\nat least 1 special character"
          },
          "old_password": {
            "type": "string"
          }
        }
      },
      "schema.RespWithStatusAndMessage": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "something"
              },
              "success": {
                "type": "boolean"
              }
            },
            "required": [
              "message",
              "success"
            ]
          }
        },
        "required": [
          "data"
        ]
      },
      "schema.PostUsersLinkInput": {
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "description": "your account of third party service"
          },
          "credential": {
            "type": "string",
            "description": "your credential of third party service and it would be used to validate if your account is valid"
          },
          "login_type": {
            "type": "string",
            "description": "third party service name\nonly google is supported now"
          }
        },
        "required": [
          "account",
          "login_type"
        ]
      },
      "schema.PostVendorsTestInput": {
        "type": "object",
        "properties": {
          "credential": {
            "type": "object"
          },
          "provider": {
            "enum": [
              "Sygna_Bridge",
              "Elliptic",
              "Chainalysis",
              "ComplyAdvantage",
              "Merkle Science",
              "TRISA",
              "Dow Jones",
              "Coinfirm",
              "Coinfirm (Sandbox)"
            ]
          },
          "type": {
            "enum": [
              "Travel Rule",
              "Blockchain Analytics",
              "Sanction Screening"
            ]
          }
        },
        "required": [
          "credential",
          "provider",
          "type"
        ]
      },
      "schema.PostVendorsTestOutput": {
        "type": "object",
        "properties": {
          "error_message": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "provider": {
            "type": "string"
          },
          "status_code": {
            "type": "integer"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "model.WebhookEvent": {
        "type": "object",
        "properties": {
          "assets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.OwnershipAsset"
            }
          },
          "created_at": {
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/model.Object"
          },
          "id": {
            "type": "string"
          },
          "owner_email": {
            "type": "string"
          },
          "owner_info": {
            "type": "object"
          },
          "sender_email": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          },
          "status_text": {
            "type": "string"
          },
          "retry_count": {
            "type": "string"
          },
          "webhook_logs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/model.Webhook_logs"
            }
          }
        }
      },
      "model.Webhook_logs": {
        "type": "object",
        "properties": {
          "created_at": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "trigger": {
            "type": "string"
          }
        }
      }
    }
  }
}