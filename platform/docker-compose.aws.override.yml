version: "2.1"

services:

  # (Optional)It's not required if you already have a mysql database which version is 8.0
  postgres:
    image: postgres:12-alpine
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512M
    environment:
      POSTGRES_PASSWORD: <POSTGRES_PASSWORD>
      POSTGRES_USER: <POSTGRES_USER>
      POSTGRES_DB: db

  # (Optional)phpmyadmin is commonly used GUI for Mysql
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin:5.2.0
  #   ports:
  #     - "8082:80"
  #   environment:
  #     PMA_HOST: mysql
  #     PMA_PORT: 3306
  # (Optional)It's not required if you only want to use Restful API but it's required if you want to use Email Protocol
  frontend:
    # if you want to try our beta version, please refer to https://hub.docker.com/r/sygna/sygna-hub-console/tags
    # to get latest beta version tag, ex: sygna/sygna-hub-console:1.0.2-beta.1
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512M
    ports:
      - 80:80
    depends_on:
      - backend
    environment:
      # replace with your backend url
      - BACKEND_API_URL=<BACKEND_API_URL , need /v1 path defined like https://backend.test.net:8080/v1 >
      # (Optional) required only if you want to enable Google login
      # its value should match google_login/id entry in config.yml file used by backend
      # please add it with your valid GOOGLE_SSO_CLIENT_ID. eg. GOOGLE_SSO_CLIENT_ID=<ID>

  backend:
    # if you want to try our beta version, please refer to https://hub.docker.com/r/sygna/sygna-hub/tags
    # to get latest beta version tag, ex: sygna/sygna-hub:1.0.2-beta.1
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512M
    ports:
      - 80:80
    environment:
      # database configuration
      # replace with your backend url
      - DB_HOST=postgres.platform.local
      - DB_NAME=db
      - DB_PASSWORD=<POSTGRES_PASSWORD>
      - DB_PORT=5432
      - DB_USER=<POSTGRES_USER>
      # supported options: postgres | mysql
      - DB_DRIVER=postgres

      # email address and password for first user in hub server
      # you can use this account to login
      - ADMIN_ACCOUNT=<ADMIN_ACCOUNT>
      # Password should contain at least 6 letters, at least 1 number, at least 1 upper case and at least 1 special character
      # special character: ~!@#$%^&*()_+`-={}|[]\\:\"<>?,./
      - ADMIN_PASSWORD=<ADMIN_PASSWORD>

      # https (SSL/TLS) is required
      - ALLOW_ORIGINS=[<FRONTEND_URL, like https://frontend.test.net >]
      - PORT=80
      - TRISA_SERVER_URL=http://trisa.platform.local

      # This URL endpoint is used by the Sygna (Bridge) server to send a "permission request" to you.
      # Upon bringing up the Sygna Hub docker, the "callback_host" will be applied to the four callback endpoint URLs of the VASP on the Sygna server: callback_permission_request_url, callback_txid_url, callback_validate_addr_url, and callback_vasp_server_health_check_url.
      # If the "callback_host" is updated, the VASP needs to restart the docker for the host on the Sygna (Bridge) server to be refreshed automatically (estimated from version 1.21.0).
      # https (SSL/TLS) is required
      - CALLBACK_HOST=<BACKEND_API_URL, without /v1 pathdefined ,like https://backend.test.net:8080>

      # url of your primary domain, used in set-cookie, is not required since 1.17.0 (1.17.0-beta.1) and will be deprecated at 2023.2.1
      # https (SSL/TLS) is required
      - COOKIE_DOMAIN=<COOKIE_DOMAIN , like https://test.net>

      # JWT token will expire after {this value} seconds
      - ACCESS_TOKEN_EXPIRES_IN_SECONDS=14400

      # a new encryption key generated by VASP to encrypt service credential in the database, should be a 32 character long hex string
      # can NOT be set with the “private key” (generated by VASP during Sygna Hub account registration)
      - DATA_ENCRYPTION_KEY=<DATA_ENCRYPTION_KEY , like  00000000000000000000000000000000>

      # signing key for JWT token, you should keep this value in secret place
      - JWT_SECRET=p@ssWord0

      # license key = Sygna Hub API key = "Your API Key" (VASP will receive it when Sygna Hub account registration has completed)
      - LICENSE_KEY=0000000000000000000000000000000000000000000000000000000000000000

      # 8 characters code. Please check your Sygna Hub account registration completion mail for this information.
      - VASP_CODE=XXXXXXXX

      # hostname and port of your email service
      # https (SSL/TLS) is required
      - EMAIL_HOST=
      # email address and password of sender
      # please input the AWS IAM user name and password if you want to use AWS SES to send email
      - EMAIL_ACCOUNT=
      - EMAIL_PASSWORD=
      # name of sender, it would be useless when you enable TLS
      - EMAIL_DISPLAY_NAME=
      # prefix of the mail subject
      - EMAIL_SUBJECT_PREFIX=
      # Please enable the below attributes if you want to support TLS (EMAIL_TLS_SUPPORT=TRUE)
      - EMAIL_TLS_SUPPORT=
      # from_email: <the email address of your sender>
      - EMAIL_FROM_EMAIL=
      # (Optional) required only if you want to enable Google login
      # its value should match google_login/id entry in config.yml file used by backend
      # please add it with your valid GOOGLE_SSO_CLIENT_ID
      #GOOGLE_SSO_CLIENT_ID=<ID>

x-aws-cloudformation:
  Resources:
    FrontendTCP80Listener:
      Properties:
        Certificates:
          - CertificateArn: "<FRONTEND_ACM_ARN>"
        Protocol: HTTPS
        Port: 443
    BackendTCP80Listener:
      Properties:
        Certificates:
          - CertificateArn: "<BACKEND_ACM_ARN>"
        Protocol: HTTPS
        Port: 8080
    BackendTCP80TargetGroup:
      Properties:
        HealthCheckPath: /v1/vasp-server-status
        Port: 80
        Matcher:
          HttpCode: 200-299
    Default8080Ingress:
      Properties:
        CidrIp: 0.0.0.0/0
        Description: backend:8080/tcp on default network
        FromPort: 8080
        GroupId:
          Ref: DefaultNetwork
        IpProtocol: TCP
        ToPort: 8080
      Type: AWS::EC2::SecurityGroupIngress
    Default443Ingress:
      Properties:
        CidrIp: 0.0.0.0/0
        Description: frontend:443/tcp on default network
        FromPort: 443
        GroupId:
          Ref: DefaultNetwork
        IpProtocol: TCP
        ToPort: 443
      Type: AWS::EC2::SecurityGroupIngress
